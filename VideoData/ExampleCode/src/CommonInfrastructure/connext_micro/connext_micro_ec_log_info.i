/* RTI Connext Micro 2.4.8 error code information file
 * Generated: Wed Sep 21 12:10:40 EDT 2016
 */

#include "dds_c/dds_c_log.h"
#include "disc_dpde/disc_dpde_log.h"
#include "disc_dpse/disc_dpse_log.h"
#include "netio/netio_log.h"
#include "osapi/osapi_log.h"
#include "reda/reda_log.h"
#include "rh_sm/rh_sm_log.h"
#include "rt/rt_log.h"
#include "rtps/rtps_log.h"
#include "wh_sm/wh_sm_log.h"
#include "cdr/cdr_log.h"
#include "db/db_log.h"

struct ec_log_info {
    unsigned int value;
    const char  *name;
    const char  *module_name;
    const char  *definition;
    const char  *definition_file;
    const char  *brief;
};

#define EC_LOG_INFO_COUNT (620)
static const struct ec_log_info S_ec_log_infos[EC_LOG_INFO_COUNT] = {
    {CDR_LOG_STREAM_ALLOC_EC, "CDR_LOG_STREAM_ALLOC_EC", "CDR", "(CDR_LOG_BASE + 1)", "cdr/cdr_log.h", "Failed to allocate stream or stream buffer"},
    {CDR_LOG_SET_OFFSET_EC, "CDR_LOG_SET_OFFSET_EC", "CDR", "(CDR_LOG_BASE + 2)", "cdr/cdr_log.h", "Failed to set stream's current offset"},
    {CDR_LOG_INCR_OFFSET_EC, "CDR_LOG_INCR_OFFSET_EC", "CDR", "(CDR_LOG_BASE + 3)", "cdr/cdr_log.h", "Failed to increament stream's current offset"},
    {DB_LOG_SORTED_ALLOC_EC, "DB_LOG_SORTED_ALLOC_EC", "DB", "(DB_LOG_BASE + 1)", "db/db_log.h", "Not sufficient memory to allocate sorted list for an index"},
    {DB_LOG_NAME_TOO_LONG_EC, "DB_LOG_NAME_TOO_LONG_EC", "DB", "(DB_LOG_BASE + 2)", "db/db_log.h", "The specified database name is too long"},
    {DB_LOG_ILLEGAL_TABLE_SIZE_EC, "DB_LOG_ILLEGAL_TABLE_SIZE_EC", "DB", "(DB_LOG_BASE + 3)", "db/db_log.h", "Illegal table size specified"},
    {DB_LOG_ILLEGAL_LOCK_MODE_EC, "DB_LOG_ILLEGAL_LOCK_MODE_EC", "DB", "(DB_LOG_BASE + 4)", "db/db_log.h", "Illegal combination of lock mode and mutex given"},
    {DB_LOG_MUTEX_ALLOC_EC, "DB_LOG_MUTEX_ALLOC_EC", "DB", "(DB_LOG_BASE + 5)", "db/db_log.h", "Failed to allocate database mutex"},
    {DB_LOG_ALLOC_TABLE_POOL_EC, "DB_LOG_ALLOC_TABLE_POOL_EC", "DB", "(DB_LOG_BASE + 6)", "db/db_log.h", "Failed to allocate buffer pool"},
    {DB_LOG_TABLES_INUSE_EC, "DB_LOG_TABLES_INUSE_EC", "DB", "(DB_LOG_BASE + 7)", "db/db_log.h", "Table is in use"},
    {DB_LOG_TABLE_NAME_TOO_LONG_EC, "DB_LOG_TABLE_NAME_TOO_LONG_EC", "DB", "(DB_LOG_BASE + 8)", "db/db_log.h", "Specified table name too long"},
    {DB_LOG_ILLEGAL_RECORD_COUNT_EC, "DB_LOG_ILLEGAL_RECORD_COUNT_EC", "DB", "(DB_LOG_BASE + 9)", "db/db_log.h", "Illegal record count specified"},
    {DB_LOG_TABLE_EXISTS_EC, "DB_LOG_TABLE_EXISTS_EC", "DB", "(DB_LOG_BASE + 10)", "db/db_log.h", "Specified table already exists"},
    {DB_LOG_OUT_OF_TABLES_EC, "DB_LOG_OUT_OF_TABLES_EC", "DB", "(DB_LOG_BASE + 11)", "db/db_log.h", "Table resources exceeded"},
    {DB_LOG_OUT_OF_RECORDS_EC, "DB_LOG_OUT_OF_RECORDS_EC", "DB", "(DB_LOG_BASE + 12)", "db/db_log.h", "Table record resources exceeded"},
    {DB_LOG_OUT_OF_INDICES_EC, "DB_LOG_OUT_OF_INDICES_EC", "DB", "(DB_LOG_BASE + 13)", "db/db_log.h", "Table index resources exceeded"},
    {DB_LOG_OUT_OF_CURSORS_EC, "DB_LOG_OUT_OF_CURSORS_EC", "DB", "(DB_LOG_BASE + 14)", "db/db_log.h", "Table cursor resources exceeded"},
    {DB_LOG_RECORDS_INUSE_EC, "DB_LOG_RECORDS_INUSE_EC", "DB", "(DB_LOG_BASE + 15)", "db/db_log.h", "Cannot delete table, records are still in table"},
    {DB_LOG_CURSORS_INUSE_EC, "DB_LOG_CURSORS_INUSE_EC", "DB", "(DB_LOG_BASE + 16)", "db/db_log.h", "Cannot delete table, cursors are still in use"},
    {DB_LOG_INDEX_INUSE_EC, "DB_LOG_INDEX_INUSE_EC", "DB", "(DB_LOG_BASE + 17)", "db/db_log.h", "Cannot delete table, indices are still in use"},
    {DB_LOG_ALLOC_CURSOR_POOL_EC, "DB_LOG_ALLOC_CURSOR_POOL_EC", "DB", "(DB_LOG_BASE + 18)", "db/db_log.h", "Failed to allocate cursor buffer pool"},
    {DB_LOG_ALLOC_INDEX_POOL_EC, "DB_LOG_ALLOC_INDEX_POOL_EC", "DB", "(DB_LOG_BASE + 19)", "db/db_log.h", "Failed to allocate index buffer pool"},
    {DB_LOG_ALLOC_RECORD_POOL_EC, "DB_LOG_ALLOC_RECORD_POOL_EC", "DB", "(DB_LOG_BASE + 20)", "db/db_log.h", "Failed to allocate record buffer pool"},
    {DB_LOG_ALLOC_DATABASE_EC, "DB_LOG_ALLOC_DATABASE_EC", "DB", "(DB_LOG_BASE + 21)", "db/db_log.h", "Failed to allocate database"},
    {DB_LOG_TABLE_NOT_INUSE_EC, "DB_LOG_TABLE_NOT_INUSE_EC", "DB", "(DB_LOG_BASE + 22)", "db/db_log.h", "An attempt was made to delete a table not in use"},
    {DB_LOG_RECORD_ALREADY_EXISTS_EC, "DB_LOG_RECORD_ALREADY_EXISTS_EC", "DB", "(DB_LOG_BASE + 23)", "db/db_log.h", "An attempt was made to insert an already existing record"},
    {DB_LOG_RECORD_DOES_NOT_EXIST_EC, "DB_LOG_RECORD_DOES_NOT_EXIST_EC", "DB", "(DB_LOG_BASE + 24)", "db/db_log.h", "An attempt was made to delete a record that does not exist"},
    {DB_LOG_CURSOR_INVALIDATED_EC, "DB_LOG_CURSOR_INVALIDATED_EC", "DB", "(DB_LOG_BASE + 25)", "db/db_log.h", "An attempt was made to use a cursor that has been invalidated"},
    {DB_LOG_LOCK_FAILURE_EC, "DB_LOG_LOCK_FAILURE_EC", "DB", "(DB_LOG_BASE + 26)", "db/db_log.h", "Failed to lock the database"},
    {DB_LOG_UNLOCK_FAILURE_EC, "DB_LOG_UNLOCK_FAILURE_EC", "DB", "(DB_LOG_BASE + 27)", "db/db_log.h", "Failed to unlock the database"},
    {DDSC_LOG_INVALID_DURATION_EC, "DDSC_LOG_INVALID_DURATION_EC", "DDSC", "(DDSC_LOG_BASE + 1)", "dds_c/dds_c_log.h", "The specified duration is not valid."},
    {DDSC_LOG_INVALID_PARTICIPANT_NAME_EC, "DDSC_LOG_INVALID_PARTICIPANT_NAME_EC", "DDSC", "(DDSC_LOG_BASE + 2)", "dds_c/dds_c_log.h", "An invalid participant name was specified with an unknown GUID."},
    {DDSC_LOG_INVALID_PARTICIPANT_GUID_PREFIX_EC, "DDSC_LOG_INVALID_PARTICIPANT_GUID_PREFIX_EC", "DDSC", "(DDSC_LOG_BASE + 3)", "dds_c/dds_c_log.h", "An invalid participant GUID prefix was specified, typically the"},
    {DDSC_LOG_SYS_GETTIME_EC, "DDSC_LOG_SYS_GETTIME_EC", "DDSC", "(DDSC_LOG_BASE + 4)", "dds_c/dds_c_log.h", "A call to OSAPI_System_get_time failed."},
    {DDSC_LOG_GET_NEXT_OBJECT_ID_EC, "DDSC_LOG_GET_NEXT_OBJECT_ID_EC", "DDSC", "(DDSC_LOG_BASE + 5)", "dds_c/dds_c_log.h", "Failed to get the next automatically generated object ID for an"},
    {DDSC_LOG_SET_ENTITY_NAME_EC, "DDSC_LOG_SET_ENTITY_NAME_EC", "DDSC", "(DDSC_LOG_BASE + 6)", "dds_c/dds_c_log.h", "Failed to set name string for a DDS entity in the DomainParticipantQos"},
    {DDSC_LOG_SYS_GET_HOSTNAME_EC, "DDSC_LOG_SYS_GET_HOSTNAME_EC", "DDSC", "(DDSC_LOG_BASE + 7)", "dds_c/dds_c_log.h", "A call to OSAPI_System_get_hostname failed."},
    {DDSC_LOG_IO_SNPRINTF_FAILED_EC, "DDSC_LOG_IO_SNPRINTF_FAILED_EC", "DDSC", "(DDSC_LOG_BASE + 8)", "dds_c/dds_c_log.h", "A call to OSAPI_Stdio_snprintf failed. Typically this means the"},
    {DDSC_LOG_TOPIC_FIND_EC, "DDSC_LOG_TOPIC_FIND_EC", "DDSC", "(DDSC_LOG_BASE + 9)", "dds_c/dds_c_log.h", "Failed to find a topic created by a DomainParticipant."},
    {DDSC_LOG_UNKNOWN_REMOTE_PARTICIPANT_NAME_EC, "DDSC_LOG_UNKNOWN_REMOTE_PARTICIPANT_NAME_EC", "DDSC", "(DDSC_LOG_BASE + 10)", "dds_c/dds_c_log.h", "Endpoint discovery failed because the name of the remote participant"},
    {DDSC_LOG_UNKNOWN_REMOTE_PARTICIPANT_KEY_EC, "DDSC_LOG_UNKNOWN_REMOTE_PARTICIPANT_KEY_EC", "DDSC", "(DDSC_LOG_BASE + 11)", "dds_c/dds_c_log.h", "Endpoint discovery failed because the key of the remote participant"},
    {DDSC_LOG_REMOTE_PARTICIPANT_KEY_NOT_EQUAL_EC, "DDSC_LOG_REMOTE_PARTICIPANT_KEY_NOT_EQUAL_EC", "DDSC", "(DDSC_LOG_BASE + 12)", "dds_c/dds_c_log.h", "Failed endpoint discovery when key does not match the remote"},
    {DDSC_LOG_INVALID_ENDPOINT_GUID_EC, "DDSC_LOG_INVALID_ENDPOINT_GUID_EC", "DDSC", "(DDSC_LOG_BASE + 13)", "dds_c/dds_c_log.h", "Failed endpoint discovery due to an invalid or unknown endpoint GUID."},
    {DDSC_LOG_ENDPOINT_NOT_CHILD_OF_PARTICIPANT_EC, "DDSC_LOG_ENDPOINT_NOT_CHILD_OF_PARTICIPANT_EC", "DDSC", "(DDSC_LOG_BASE + 14)", "dds_c/dds_c_log.h", "Failed endpoint discovery when an endpoint is determined to belong to"},
    {DDSC_LOG_PARTICIPANT_DOES_NOT_EXIST_EC, "DDSC_LOG_PARTICIPANT_DOES_NOT_EXIST_EC", "DDSC", "(DDSC_LOG_BASE + 15)", "dds_c/dds_c_log.h", "Failed participant discovery because a remote participant that should"},
    {DDSC_LOG_REFRESH_REM_PARTICIPANT_EC, "DDSC_LOG_REFRESH_REM_PARTICIPANT_EC", "DDSC", "(DDSC_LOG_BASE + 16)", "dds_c/dds_c_log.h", "Did not find a remote participant when asserting participant"},
    {DDSC_LOG_REFRESH_REM_PARTICIPANT_TIMEOUT_EC, "DDSC_LOG_REFRESH_REM_PARTICIPANT_TIMEOUT_EC", "DDSC", "(DDSC_LOG_BASE + 17)", "dds_c/dds_c_log.h", "Failed to assert participant liveliness to a remote participant."},
    {DDSC_LOG_PARTICIPANT_LOOKUP_EC, "DDSC_LOG_PARTICIPANT_LOOKUP_EC", "DDSC", "(DDSC_LOG_BASE + 18)", "dds_c/dds_c_log.h", "Failed to find a remote participant as previously discovered."},
    {DDSC_LOG_REMOVE_PUBLICATION_EC, "DDSC_LOG_REMOVE_PUBLICATION_EC", "DDSC", "(DDSC_LOG_BASE + 19)", "dds_c/dds_c_log.h", "Failed to remove resources for a remote publication."},
    {DDSC_LOG_REMOVE_SUBSCRIPTION_EC, "DDSC_LOG_REMOVE_SUBSCRIPTION_EC", "DDSC", "(DDSC_LOG_BASE + 20)", "dds_c/dds_c_log.h", "Failed to remove resources for a remote subscription."},
    {DDSC_LOG_FIND_PUBLICATION_PARENT_EC, "DDSC_LOG_FIND_PUBLICATION_PARENT_EC", "DDSC", "(DDSC_LOG_BASE + 21)", "dds_c/dds_c_log.h", "Cannot determine the participant of a remote publication."},
    {DDSC_LOG_FIND_SUBSCRIPTION_PARENT_EC, "DDSC_LOG_FIND_SUBSCRIPTION_PARENT_EC", "DDSC", "(DDSC_LOG_BASE + 22)", "dds_c/dds_c_log.h", "Cannot determine the participant of a remote subscription."},
    {DDSC_LOG_MAX_PARTICIPANT_ID_REACHED_EC, "DDSC_LOG_MAX_PARTICIPANT_ID_REACHED_EC", "DDSC", "(DDSC_LOG_BASE + 23)", "dds_c/dds_c_log.h", "Failed to create DomainParticipant due to running out of participant"},
    {DDSC_LOG_RESERVE_LOCATORS_EC, "DDSC_LOG_RESERVE_LOCATORS_EC", "DDSC", "(DDSC_LOG_BASE + 24)", "dds_c/dds_c_log.h", "Failed to reserve endpoint locators."},
    {DDSC_LOG_TIMER_CREATE_TIMEOUT_EC, "DDSC_LOG_TIMER_CREATE_TIMEOUT_EC", "DDSC", "(DDSC_LOG_BASE + 25)", "dds_c/dds_c_log.h", "Failed to create a timeout."},
    {DDSC_LOG_ILLEGAL_OBJECTID_EC, "DDSC_LOG_ILLEGAL_OBJECTID_EC", "DDSC", "(DDSC_LOG_BASE + 26)", "dds_c/dds_c_log.h", "Illegal object id specified."},
    {DDSC_LOG_TOPIC_NARROW_EC, "DDSC_LOG_TOPIC_NARROW_EC", "DDSC", "(DDSC_LOG_BASE + 27)", "dds_c/dds_c_log.h", "Failed to narrow a TopicDescription to the named Topic."},
    {DDSC_LOG_FAILED_UPDATE_STATUS_CONDITION_EC, "DDSC_LOG_FAILED_UPDATE_STATUS_CONDITION_EC", "DDSC", "(DDSC_LOG_BASE + 28)", "dds_c/dds_c_log.h", "Failed to update state of StatusCondition."},
    {DDSC_LOG_WS_REMOVE_COND_REFERENCE_EC, "DDSC_LOG_WS_REMOVE_COND_REFERENCE_EC", "DDSC", "(DDSC_LOG_BASE + 29)", "dds_c/dds_c_log.h", "Failed to remove a condition reference from a waitset."},
    {DDSC_LOG_WS_ADD_COND_REFERENCE_EC, "DDSC_LOG_WS_ADD_COND_REFERENCE_EC", "DDSC", "(DDSC_LOG_BASE + 30)", "dds_c/dds_c_log.h", "Failed to add a condition reference to a waitset."},
    {DDSC_LOG_RELEASE_META_MC_EC, "DDSC_LOG_RELEASE_META_MC_EC", "DDSC", "(DDSC_LOG_BASE + 31)", "dds_c/dds_c_log.h", "Failed to release resources for multicast discovery locators."},
    {DDSC_LOG_RELEASE_META_UC_EC, "DDSC_LOG_RELEASE_META_UC_EC", "DDSC", "(DDSC_LOG_BASE + 32)", "dds_c/dds_c_log.h", "Failed to release resources for unicast discovery locators."},
    {DDSC_LOG_RELEASE_USER_MC_EC, "DDSC_LOG_RELEASE_USER_MC_EC", "DDSC", "(DDSC_LOG_BASE + 33)", "dds_c/dds_c_log.h", "Failed to release resources for multicast user locators."},
    {DDSC_LOG_RELEASE_USER_UC_EC, "DDSC_LOG_RELEASE_USER_UC_EC", "DDSC", "(DDSC_LOG_BASE + 34)", "dds_c/dds_c_log.h", "Failed to release resources for unicast user locators."},
    {DDSC_LOG_INVALID_DOMAINID_EC, "DDSC_LOG_INVALID_DOMAINID_EC", "DDSC", "(DDSC_LOG_BASE + 35)", "dds_c/dds_c_log.h", "The domain ID specified exceeds what is allowed based on the"},
    {DDSC_LOG_DATABASE_CREATE_EC, "DDSC_LOG_DATABASE_CREATE_EC", "DDSC", "(DDSC_LOG_BASE + 100)", "dds_c/dds_c_log.h", "Failed to create database."},
    {DDSC_LOG_DATABASE_DELETE_EC, "DDSC_LOG_DATABASE_DELETE_EC", "DDSC", "(DDSC_LOG_BASE + 101)", "dds_c/dds_c_log.h", "Failed to delete database."},
    {DDSC_LOG_TABLE_CREATE_EC, "DDSC_LOG_TABLE_CREATE_EC", "DDSC", "(DDSC_LOG_BASE + 102)", "dds_c/dds_c_log.h", "Failed to create database table of the specified name."},
    {DDSC_LOG_TABLE_INUSE_EC, "DDSC_LOG_TABLE_INUSE_EC", "DDSC", "(DDSC_LOG_BASE + 103)", "dds_c/dds_c_log.h", "Failed to delete a database table because it is not empty."},
    {DDSC_LOG_TABLE_DELETE_EC, "DDSC_LOG_TABLE_DELETE_EC", "DDSC", "(DDSC_LOG_BASE + 104)", "dds_c/dds_c_log.h", "Failed to delete a database table."},
    {DDSC_LOG_TABLE_SELECT_EC, "DDSC_LOG_TABLE_SELECT_EC", "DDSC", "(DDSC_LOG_BASE + 105)", "dds_c/dds_c_log.h", "A selection operation failed on the specified database table."},
    {DDSC_LOG_CREATE_INDEX_EC, "DDSC_LOG_CREATE_INDEX_EC", "DDSC", "(DDSC_LOG_BASE + 106)", "dds_c/dds_c_log.h", "Failed to create an index on a database table."},
    {DDSC_LOG_DELETE_INDEX_EC, "DDSC_LOG_DELETE_INDEX_EC", "DDSC", "(DDSC_LOG_BASE + 107)", "dds_c/dds_c_log.h", "Failed to delete an index on a database table."},
    {DDSC_LOG_DB_CURSOR_INVALIDATED_EC, "DDSC_LOG_DB_CURSOR_INVALIDATED_EC", "DDSC", "(DDSC_LOG_BASE + 108)", "dds_c/dds_c_log.h", "A database table cursor was invalidated while in use."},
    {DDSC_LOG_RECORD_CREATE_EC, "DDSC_LOG_RECORD_CREATE_EC", "DDSC", "(DDSC_LOG_BASE + 109)", "dds_c/dds_c_log.h", "Failed to create route record of the specified kind."},
    {DDSC_LOG_RECORD_DELETE_EC, "DDSC_LOG_RECORD_DELETE_EC", "DDSC", "(DDSC_LOG_BASE + 110)", "dds_c/dds_c_log.h", "Failed to delete a database record of the specified kind."},
    {DDSC_LOG_RECORD_INSERT_EC, "DDSC_LOG_RECORD_INSERT_EC", "DDSC", "(DDSC_LOG_BASE + 111)", "dds_c/dds_c_log.h", "Failed to insert a database record of the specified kind."},
    {DDSC_LOG_RECORD_ERROR_EC, "DDSC_LOG_RECORD_ERROR_EC", "DDSC", "(DDSC_LOG_BASE + 112)", "dds_c/dds_c_log.h", "Unknown error for database record of the specified kind."},
    {DDSC_LOG_RECORD_EXISTS_EC, "DDSC_LOG_RECORD_EXISTS_EC", "DDSC", "(DDSC_LOG_BASE + 113)", "dds_c/dds_c_log.h", "A database record of the specified kind already exists."},
    {DDSC_LOG_RECORD_LOOKUP_EC, "DDSC_LOG_RECORD_LOOKUP_EC", "DDSC", "(DDSC_LOG_BASE + 114)", "dds_c/dds_c_log.h", "A lookup of a database record of the specified kind failed."},
    {DDSC_LOG_RECORD_NOT_EXISTS_EC, "DDSC_LOG_RECORD_NOT_EXISTS_EC", "DDSC", "(DDSC_LOG_BASE + 115)", "dds_c/dds_c_log.h", "A database record of the specified kind does not exist."},
    {DDSC_LOG_RECORD_SELECT_EC, "DDSC_LOG_RECORD_SELECT_EC", "DDSC", "(DDSC_LOG_BASE + 116)", "dds_c/dds_c_log.h", "A database select on the specified record kind failed."},
    {DDSC_LOG_RECORD_REMOVE_EC, "DDSC_LOG_RECORD_REMOVE_EC", "DDSC", "(DDSC_LOG_BASE + 117)", "dds_c/dds_c_log.h", "Removal a database record of the specified kind failed."},
    {DDSC_LOG_RECORD_INITIALIZE_EC, "DDSC_LOG_RECORD_INITIALIZE_EC", "DDSC", "(DDSC_LOG_BASE + 118)", "dds_c/dds_c_log.h", "A database record of the specified kind could not be initialized"},
    {DDSC_LOG_RECORD_FINALIZE_EC, "DDSC_LOG_RECORD_FINALIZE_EC", "DDSC", "(DDSC_LOG_BASE + 119)", "dds_c/dds_c_log.h", "A database record of the specified kind could not be finalized"},
    {DDSC_LOG_OBJECT_INITIALIZE_EC, "DDSC_LOG_OBJECT_INITIALIZE_EC", "DDSC", "(DDSC_LOG_BASE + 200)", "dds_c/dds_c_log.h", "Out of resources to initialize object of the specified kind."},
    {DDSC_LOG_OBJECT_ALLOCATE_EC, "DDSC_LOG_OBJECT_ALLOCATE_EC", "DDSC", "(DDSC_LOG_BASE + 201)", "dds_c/dds_c_log.h", "Out of resources to allocate an object of the specified kind."},
    {DDSC_LOG_OBJECT_FINALIZE_EC, "DDSC_LOG_OBJECT_FINALIZE_EC", "DDSC", "(DDSC_LOG_BASE + 202)", "dds_c/dds_c_log.h", "Failed to finalize object of specified kind."},
    {DDSC_LOG_OBJECT_DELETE_EC, "DDSC_LOG_OBJECT_DELETE_EC", "DDSC", "(DDSC_LOG_BASE + 203)", "dds_c/dds_c_log.h", "Failed to delete object of specified kind."},
    {DDSC_LOG_OBJECT_COPY_EC, "DDSC_LOG_OBJECT_COPY_EC", "DDSC", "(DDSC_LOG_BASE + 204)", "dds_c/dds_c_log.h", "Failed to copy object of specified kind."},
    {DDSC_LOG_OBJECT_REFCOUNT_EC, "DDSC_LOG_OBJECT_REFCOUNT_EC", "DDSC", "(DDSC_LOG_BASE + 205)", "dds_c/dds_c_log.h", "Failed to delete/finalize an object because other objects are"},
    {DDSC_LOG_OBJECT_GET_PROPERTY_EC, "DDSC_LOG_OBJECT_GET_PROPERTY_EC", "DDSC", "(DDSC_LOG_BASE + 206)", "dds_c/dds_c_log.h", "Failed to get the object properties."},
    {DDSC_LOG_OBJECT_SET_PROPERTY_EC, "DDSC_LOG_OBJECT_SET_PROPERTY_EC", "DDSC", "(DDSC_LOG_BASE + 207)", "dds_c/dds_c_log.h", "Failed to set the object properties."},
    {DDSC_LOG_OBJECT_EMPTY_EC, "DDSC_LOG_OBJECT_EMPTY_EC", "DDSC", "(DDSC_LOG_BASE + 208)", "dds_c/dds_c_log.h", "An object is empty, typically applies only to buffer-pool objects"},
    {DDSC_LOG_OBJECT_NOT_EMPTY_EC, "DDSC_LOG_OBJECT_NOT_EMPTY_EC", "DDSC", "(DDSC_LOG_BASE + 208)", "dds_c/dds_c_log.h", "An object is empty, typically applies only to buffer-pool objects"},
    {DDSC_LOG_SEQUENCE_SETMAX_EC, "DDSC_LOG_SEQUENCE_SETMAX_EC", "DDSC", "(DDSC_LOG_BASE + 300)", "dds_c/dds_c_log.h", "Failed to set the maximum length of a sequence of the specified kind."},
    {DDSC_LOG_SEQUENCE_SETLENGTH_EC, "DDSC_LOG_SEQUENCE_SETLENGTH_EC", "DDSC", "(DDSC_LOG_BASE + 301)", "dds_c/dds_c_log.h", "Failed to set the length of a sequence of the specified kind."},
    {DDSC_LOG_SEQUENCE_GETREF_EC, "DDSC_LOG_SEQUENCE_GETREF_EC", "DDSC", "(DDSC_LOG_BASE + 302)", "dds_c/dds_c_log.h", "Failed to get a reference at the specified index for a sequence of"},
    {DDSC_LOG_SEQUENCE_INITIALIZE_EC, "DDSC_LOG_SEQUENCE_INITIALIZE_EC", "DDSC", "(DDSC_LOG_BASE + 303)", "dds_c/dds_c_log.h", "Failed to initialize a sequence of the specified kind."},
    {DDSC_LOG_SEQUENCE_FINALIZE_EC, "DDSC_LOG_SEQUENCE_FINALIZE_EC", "DDSC", "(DDSC_LOG_BASE + 304)", "dds_c/dds_c_log.h", "Failed to finalize a sequence of the specified kind."},
    {DDSC_LOG_SEQUENCE_COPY_EC, "DDSC_LOG_SEQUENCE_COPY_EC", "DDSC", "(DDSC_LOG_BASE + 305)", "dds_c/dds_c_log.h", "Failed to copy a sequence of the specified kind."},
    {DDSC_LOG_SEQUENCE_INVALID_EC, "DDSC_LOG_SEQUENCE_INVALID_EC", "DDSC", "(DDSC_LOG_BASE + 306)", "dds_c/dds_c_log.h", "The sequence of the specified kind was invalid in the context it is"},
    {DDSC_LOG_COMPONENT_LOOKUP_EC, "DDSC_LOG_COMPONENT_LOOKUP_EC", "DDSC", "(DDSC_LOG_BASE + 400)", "dds_c/dds_c_log.h", "Did not find a component factory with the given name in the registry"},
    {DDSC_LOG_COMPONENT_CREATE_EC, "DDSC_LOG_COMPONENT_CREATE_EC", "DDSC", "(DDSC_LOG_BASE + 401)", "dds_c/dds_c_log.h", "Could not create a component of the specified kind using the specified"},
    {DDSC_LOG_COMPONENT_DELETE_EC, "DDSC_LOG_COMPONENT_DELETE_EC", "DDSC", "(DDSC_LOG_BASE + 402)", "dds_c/dds_c_log.h", "Could not delete a component of the specified kind using the specified"},
    {DDSC_LOG_RESOURCE_EXCEEDED_EC, "DDSC_LOG_RESOURCE_EXCEEDED_EC", "DDSC", "(DDSC_LOG_BASE + 500)", "dds_c/dds_c_log.h", "Could not allocate a resource of the specified kind"},
    {DDSC_LOG_QOS_INCONSISTENT_POLICY_EC, "DDSC_LOG_QOS_INCONSISTENT_POLICY_EC", "DDSC", "(DDSC_LOG_BASE + 501)", "dds_c/dds_c_log.h", "An inconsistent Qos policy for the specified Qos kind was found."},
    {DDSC_LOG_QOS_INCONSISTENT_POLICIES_EC, "DDSC_LOG_QOS_INCONSISTENT_POLICIES_EC", "DDSC", "(DDSC_LOG_BASE + 502)", "dds_c/dds_c_log.h", "Inconsistency between two Qos policies for the specified Qos kind was"},
    {DDSC_LOG_QOS_INCONSISTENT_EC, "DDSC_LOG_QOS_INCONSISTENT_EC", "DDSC", "(DDSC_LOG_BASE + 503)", "dds_c/dds_c_log.h", "Failed to create an entity or set a qos due to inconsistent policy"},
    {DDSC_LOG_QOS_COPY_EC, "DDSC_LOG_QOS_COPY_EC", "DDSC", "(DDSC_LOG_BASE + 504)", "dds_c/dds_c_log.h", "Failed to copy a Qos of the specified kind."},
    {DDSC_LOG_QOS_INITIALIZE_EC, "DDSC_LOG_QOS_INITIALIZE_EC", "DDSC", "(DDSC_LOG_BASE + 505)", "dds_c/dds_c_log.h", "Failed to initialize a Qos of the specified kind."},
    {DDSC_LOG_QOS_FINALIZE_EC, "DDSC_LOG_QOS_FINALIZE_EC", "DDSC", "(DDSC_LOG_BASE + 506)", "dds_c/dds_c_log.h", "Failed to finalize a Qos of the specified kind."},
    {DDSC_LOG_QOS_SET_EC, "DDSC_LOG_QOS_SET_EC", "DDSC", "(DDSC_LOG_BASE + 507)", "dds_c/dds_c_log.h", "Failed to set a Qos of the specified kind."},
    {DDSC_LOG_QOS_SET_ON_ENABLED_EC, "DDSC_LOG_QOS_SET_ON_ENABLED_EC", "DDSC", "(DDSC_LOG_BASE + 508)", "dds_c/dds_c_log.h", "Failed to set a Qos of the specified kind because the entity is"},
    {DDSC_LOG_QOS_IMMUTABLE_EC, "DDSC_LOG_QOS_IMMUTABLE_EC", "DDSC", "(DDSC_LOG_BASE + 509)", "dds_c/dds_c_log.h", "Failed to set a Qos of the specified kind the immutable Qos policies"},
    {DDSC_LOG_QOS_CHANGED_EC, "DDSC_LOG_QOS_CHANGED_EC", "DDSC", "(DDSC_LOG_BASE + 510)", "dds_c/dds_c_log.h", "A discovered Qos changed (the entity already existed)"},
    {DDSC_LOG_QOS_GET_EC, "DDSC_LOG_QOS_GET_EC", "DDSC", "(DDSC_LOG_BASE + 511)", "dds_c/dds_c_log.h", "Failed to get a Qos of the specified kind."},
    {DDSC_LOG_LISTENER_INCONSISTENT_EC, "DDSC_LOG_LISTENER_INCONSISTENT_EC", "DDSC", "(DDSC_LOG_BASE + 512)", "dds_c/dds_c_log.h", "Failed to create an entity due to inconsistent listener and"},
    {DDSC_LOG_LISTENER_SET_EC, "DDSC_LOG_LISTENER_SET_EC", "DDSC", "(DDSC_LOG_BASE + 513)", "dds_c/dds_c_log.h", "Failed to set the listener of the specified kind"},
    {DDSC_LOG_LISTENER_GET_EC, "DDSC_LOG_LISTENER_GET_EC", "DDSC", "(DDSC_LOG_BASE + 514)", "dds_c/dds_c_log.h", "Failed to get the listener of the specified kind"},
    {DDSC_LOG_LISTENER_SET_ILLEGAL_NULL_EC, "DDSC_LOG_LISTENER_SET_ILLEGAL_NULL_EC", "DDSC", "(DDSC_LOG_BASE + 515)", "dds_c/dds_c_log.h", "Illegal combination of NULL listener and non-NONE status mask when"},
    {DDSC_LOG_ENTITY_ENABLE_EC, "DDSC_LOG_ENTITY_ENABLE_EC", "DDSC", "(DDSC_LOG_BASE + 600)", "dds_c/dds_c_log.h", "Failed to enable an entity of the specified kind"},
    {DDSC_LOG_ENTITY_NOT_EMPTY_EC, "DDSC_LOG_ENTITY_NOT_EMPTY_EC", "DDSC", "(DDSC_LOG_BASE + 601)", "dds_c/dds_c_log.h", "Failed to an delete/finalize an entity of the specified kind because"},
    {DDSC_LOG_ENTITY_FINALIZE_EC, "DDSC_LOG_ENTITY_FINALIZE_EC", "DDSC", "(DDSC_LOG_BASE + 602)", "dds_c/dds_c_log.h", "Failed to finalize an entity of the specified kind"},
    {DDSC_LOG_ENTITY_INITIALIZE_EC, "DDSC_LOG_ENTITY_INITIALIZE_EC", "DDSC", "(DDSC_LOG_BASE + 603)", "dds_c/dds_c_log.h", "Failed to initialize an entity of the specified kind"},
    {DDSC_LOG_ENTITY_NOT_ENABLED_EC, "DDSC_LOG_ENTITY_NOT_ENABLED_EC", "DDSC", "(DDSC_LOG_BASE + 604)", "dds_c/dds_c_log.h", "An operation was attempted on an entity that is not enabled"},
    {DDSC_LOG_ENTITY_DIFFERENT_FACTORY_EC, "DDSC_LOG_ENTITY_DIFFERENT_FACTORY_EC", "DDSC", "(DDSC_LOG_BASE + 605)", "dds_c/dds_c_log.h", "Entities are in different factories"},
    {DDSC_LOG_CDR_POOL_ALLOC_EC, "DDSC_LOG_CDR_POOL_ALLOC_EC", "DDSC", "(DDSC_LOG_BASE + 700)", "dds_c/dds_c_log.h", "Failed to allocate a pool of the specified kind"},
    {DDSC_LOG_CDR_BUFFER_SET_EC, "DDSC_LOG_CDR_BUFFER_SET_EC", "DDSC", "(DDSC_LOG_BASE + 701)", "dds_c/dds_c_log.h", "Failed to set the CDR buffer for a packet"},
    {DDSC_LOG_CDR_POOL_DELETE_EC, "DDSC_LOG_CDR_POOL_DELETE_EC", "DDSC", "(DDSC_LOG_BASE + 702)", "dds_c/dds_c_log.h", "Failed to delete the CDR pool"},
    {DDSC_LOG_CDR_SERIALIZE_PID_EC, "DDSC_LOG_CDR_SERIALIZE_PID_EC", "DDSC", "(DDSC_LOG_BASE + 703)", "dds_c/dds_c_log.h", "Failed to serialize a parameter ID"},
    {DDSC_LOG_CDR_SERIALIZE_PID_LENGTH_EC, "DDSC_LOG_CDR_SERIALIZE_PID_LENGTH_EC", "DDSC", "(DDSC_LOG_BASE + 704)", "dds_c/dds_c_log.h", "Failed to serialize a parameter length"},
    {DDSC_LOG_CDR_SERIALIZE_KEYHASH_EC, "DDSC_LOG_CDR_SERIALIZE_KEYHASH_EC", "DDSC", "(DDSC_LOG_BASE + 705)", "dds_c/dds_c_log.h", "Failed to serialize a key-hash"},
    {DDSC_LOG_CDR_SERIALIZE_DATA_EC, "DDSC_LOG_CDR_SERIALIZE_DATA_EC", "DDSC", "(DDSC_LOG_BASE + 706)", "dds_c/dds_c_log.h", "Failed to serialize payload data"},
    {DDSC_LOG_DESERIALIZE_BAD_PID_LENGTH_EC, "DDSC_LOG_DESERIALIZE_BAD_PID_LENGTH_EC", "DDSC", "(DDSC_LOG_BASE + 707)", "dds_c/dds_c_log.h", "Deserialized an invalid parameter length for a specific parameter ID"},
    {DDSC_LOG_CDR_DESERIALIZE_PID_EC, "DDSC_LOG_CDR_DESERIALIZE_PID_EC", "DDSC", "(DDSC_LOG_BASE + 708)", "dds_c/dds_c_log.h", "Failed to deserialize the ID of an inline parameter"},
    {DDSC_LOG_CDR_DESERIALIZE_PID_LENGTH_EC, "DDSC_LOG_CDR_DESERIALIZE_PID_LENGTH_EC", "DDSC", "(DDSC_LOG_BASE + 709)", "dds_c/dds_c_log.h", "Failed to deserialize the length of an inline parameter"},
    {DDSC_LOG_CDR_INCREMENT_POS_EC, "DDSC_LOG_CDR_INCREMENT_POS_EC", "DDSC", "(DDSC_LOG_BASE + 710)", "dds_c/dds_c_log.h", "Failed to increment to the position of the next inline parameter"},
    {DDSC_LOG_CDR_SET_POS_EC, "DDSC_LOG_CDR_SET_POS_EC", "DDSC", "(DDSC_LOG_BASE + 711)", "dds_c/dds_c_log.h", "Failed to set the reception stream position"},
    {DDSC_LOG_CDR_DESERIALIZE_HEADER_EC, "DDSC_LOG_CDR_DESERIALIZE_HEADER_EC", "DDSC", "(DDSC_LOG_BASE + 712)", "dds_c/dds_c_log.h", "Failed to deserialize the encapsulation header"},
    {DDSC_LOG_CDR_DESERIALIZE_DATA_EC, "DDSC_LOG_CDR_DESERIALIZE_DATA_EC", "DDSC", "(DDSC_LOG_BASE + 713)", "dds_c/dds_c_log.h", "Failed to deserialize CDR payload data"},
    {DDSC_LOG_CDR_INITIALIZE_SAMPLE_EC, "DDSC_LOG_CDR_INITIALIZE_SAMPLE_EC", "DDSC", "(DDSC_LOG_BASE + 714)", "dds_c/dds_c_log.h", "Failed to initialize CDR sample"},
    {DDSC_LOG_CDR_FINALIZE_SAMPLE_EC, "DDSC_LOG_CDR_FINALIZE_SAMPLE_EC", "DDSC", "(DDSC_LOG_BASE + 715)", "dds_c/dds_c_log.h", "Failed to finalize sample"},
    {DDSC_LOG_CDR_SERIALIZE_STATUS_INFO_EC, "DDSC_LOG_CDR_SERIALIZE_STATUS_INFO_EC", "DDSC", "(DDSC_LOG_BASE + 716)", "dds_c/dds_c_log.h", "Failed to serialize the status info parameter"},
    {DDSC_LOG_CDR_DESERIALIZE_KEYHASH_EC, "DDSC_LOG_CDR_DESERIALIZE_KEYHASH_EC", "DDSC", "(DDSC_LOG_BASE + 717)", "dds_c/dds_c_log.h", "Failed to deserialize a key-hash"},
    {DDSC_LOG_CDR_DESERIALIZE_KEY_EC, "DDSC_LOG_CDR_DESERIALIZE_KEY_EC", "DDSC", "(DDSC_LOG_BASE + 718)", "dds_c/dds_c_log.h", "Failed to deserialize CDR payload key"},
    {DDSC_LOG_NETIO_ADD_ANON_TOPIC_ROUTE_EC, "DDSC_LOG_NETIO_ADD_ANON_TOPIC_ROUTE_EC", "DDSC", "(DDSC_LOG_BASE + 800)", "dds_c/dds_c_log.h", "Failed to add a route to an anonymous participant discovery"},
    {DDSC_LOG_NETIO_ADD_TOPIC_ROUTE_EC, "DDSC_LOG_NETIO_ADD_TOPIC_ROUTE_EC", "DDSC", "(DDSC_LOG_BASE + 801)", "dds_c/dds_c_log.h", "Failed to add a route to a topic from a datawriter"},
    {DDSC_LOG_NETIO_DELETE_TOPIC_ROUTE_EC, "DDSC_LOG_NETIO_DELETE_TOPIC_ROUTE_EC", "DDSC", "(DDSC_LOG_BASE + 802)", "dds_c/dds_c_log.h", "Failed to delete a route to a topic"},
    {DDSC_LOG_NETIO_FORWARD_TOPIC_EC, "DDSC_LOG_NETIO_FORWARD_TOPIC_EC", "DDSC", "(DDSC_LOG_BASE + 803)", "dds_c/dds_c_log.h", "Failed to forward a topic"},
    {DDSC_LOG_NETIO_BIND_EXTERNAL_EC, "DDSC_LOG_NETIO_BIND_EXTERNAL_EC", "DDSC", "(DDSC_LOG_BASE + 804)", "dds_c/dds_c_log.h", "Failed to bind two external interface of the specified kind"},
    {DDSC_LOG_NETIO_UNBIND_EXTERNAL_EC, "DDSC_LOG_NETIO_UNBIND_EXTERNAL_EC", "DDSC", "(DDSC_LOG_BASE + 805)", "dds_c/dds_c_log.h", "Failed to unbind two external interfaces of the specified kind"},
    {DDSC_LOG_NETIO_BIND_EC, "DDSC_LOG_NETIO_BIND_EC", "DDSC", "(DDSC_LOG_BASE + 806)", "dds_c/dds_c_log.h", "Failed to bind an interface to a peer interface"},
    {DDSC_LOG_NETIO_UNBIND_EC, "DDSC_LOG_NETIO_UNBIND_EC", "DDSC", "(DDSC_LOG_BASE + 807)", "dds_c/dds_c_log.h", "Failed to unbind an interface from a peer interface"},
    {DDSC_LOG_NETIO_ADD_ROUTE_EC, "DDSC_LOG_NETIO_ADD_ROUTE_EC", "DDSC", "(DDSC_LOG_BASE + 808)", "dds_c/dds_c_log.h", "Failed to add a route from an interface to a peer interface"},
    {DDSC_LOG_NETIO_DELETE_ROUTE_EC, "DDSC_LOG_NETIO_DELETE_ROUTE_EC", "DDSC", "(DDSC_LOG_BASE + 809)", "dds_c/dds_c_log.h", "Failed to delete a route from an interface to a peer interface"},
    {DDSC_LOG_NETIO_GET_EXTERNAL_INTF_EC, "DDSC_LOG_NETIO_GET_EXTERNAL_INTF_EC", "DDSC", "(DDSC_LOG_BASE + 810)", "dds_c/dds_c_log.h", "Failed to get an external interface for the specified interface kind"},
    {DDSC_LOG_NETIO_NO_ROUTE_EC, "DDSC_LOG_NETIO_NO_ROUTE_EC", "DDSC", "(DDSC_LOG_BASE + 811)", "dds_c/dds_c_log.h", "A DataReader failed a bind due to no existing route"},
    {DDSC_LOG_NETIO_ROUTE_LOOKUP_FAILED_EC, "DDSC_LOG_NETIO_ROUTE_LOOKUP_FAILED_EC", "DDSC", "(DDSC_LOG_BASE + 812)", "dds_c/dds_c_log.h", "Lookup a route to a destination failed"},
    {DDSC_LOG_NETIO_GET_ROUTE_TABLE_FAILED_EC, "DDSC_LOG_NETIO_GET_ROUTE_TABLE_FAILED_EC", "DDSC", "(DDSC_LOG_BASE + 813)", "dds_c/dds_c_log.h", "Failed to get the route table for an interface"},
    {DDSC_LOG_NETIO_SEND_FAILED_EC, "DDSC_LOG_NETIO_SEND_FAILED_EC", "DDSC", "(DDSC_LOG_BASE + 814)", "dds_c/dds_c_log.h", "Failure when sending on an interface"},
    {DDSC_LOG_NETIO_SET_STATE_EC, "DDSC_LOG_NETIO_SET_STATE_EC", "DDSC", "(DDSC_LOG_BASE + 815)", "dds_c/dds_c_log.h", "Failed to set an interface state"},
    {DDSC_LOG_NETIO_PEER_LOOKUP_EC, "DDSC_LOG_NETIO_PEER_LOOKUP_EC", "DDSC", "(DDSC_LOG_BASE + 816)", "dds_c/dds_c_log.h", "Datawriter did not find a peer"},
    {DDSC_LOG_NETIO_FORCED_REMOVE_EC, "DDSC_LOG_NETIO_FORCED_REMOVE_EC", "DDSC", "(DDSC_LOG_BASE + 817)", "dds_c/dds_c_log.h", "Forced removal of sample downstream failed"},
    {DDSC_LOG_PACKET_INIT_EC, "DDSC_LOG_PACKET_INIT_EC", "DDSC", "(DDSC_LOG_BASE + 818)", "dds_c/dds_c_log.h", "Failed to initialize a packet"},
    {DDSC_LOG_PACKET_SET_HEAD_EC, "DDSC_LOG_PACKET_SET_HEAD_EC", "DDSC", "(DDSC_LOG_BASE + 819)", "dds_c/dds_c_log.h", "Failed to set the head of a packet"},
    {DDSC_LOG_PACKET_SET_TAIL_EC, "DDSC_LOG_PACKET_SET_TAIL_EC", "DDSC", "(DDSC_LOG_BASE + 820)", "dds_c/dds_c_log.h", "Failed to set the tail of a packet"},
    {DDSC_LOG_DW_ACKNACK_FAILED_EC, "DDSC_LOG_DW_ACKNACK_FAILED_EC", "DDSC", "(DDSC_LOG_BASE + 900)", "dds_c/dds_c_log.h", "Failed to ACKNACK sample in the writer history"},
    {DDSC_LOG_DW_COMMIT_EC, "DDSC_LOG_DW_COMMIT_EC", "DDSC", "(DDSC_LOG_BASE + 901)", "dds_c/dds_c_log.h", "Failed to commit a sample to the writer queue"},
    {DDSC_LOG_DW_KEYHASH_CREATE_EC, "DDSC_LOG_DW_KEYHASH_CREATE_EC", "DDSC", "(DDSC_LOG_BASE + 902)", "dds_c/dds_c_log.h", "Failed to create keyhash of instance handle"},
    {DDSC_LOG_DW_ILLEGAL_KEY_KIND_EC, "DDSC_LOG_DW_ILLEGAL_KEY_KIND_EC", "DDSC", "(DDSC_LOG_BASE + 903)", "dds_c/dds_c_log.h", "Failed a write due to an invalid key kind for the type being written"},
    {DDSC_LOG_DW_CREATE_TYPED_WRITER_EC, "DDSC_LOG_DW_CREATE_TYPED_WRITER_EC", "DDSC", "(DDSC_LOG_BASE + 904)", "dds_c/dds_c_log.h", "Failed to create a typed writer"},
    {DDSC_LOG_DW_HISTORY_REGISTER_KEY_EC, "DDSC_LOG_DW_HISTORY_REGISTER_KEY_EC", "DDSC", "(DDSC_LOG_BASE + 905)", "dds_c/dds_c_log.h", "Failed to register the key of an instance"},
    {DDSC_LOG_DR_CREATE_TYPED_READER_EC, "DDSC_LOG_DR_CREATE_TYPED_READER_EC", "DDSC", "(DDSC_LOG_BASE + 1000)", "dds_c/dds_c_log.h", "Failed to create a typed datareader"},
    {DDSC_LOG_DR_COPY_DATA_SAMPLE_EC, "DDSC_LOG_DR_COPY_DATA_SAMPLE_EC", "DDSC", "(DDSC_LOG_BASE + 1001)", "dds_c/dds_c_log.h", "Failed to copy a sample upon reception, read, or take"},
    {DDSC_LOG_DR_COMMIT_SAMPLE_EC, "DDSC_LOG_DR_COMMIT_SAMPLE_EC", "DDSC", "(DDSC_LOG_BASE + 1002)", "dds_c/dds_c_log.h", "Failed to commit a sample to be made available to be read or taken"},
    {DDSC_LOG_DR_FILTER_ERROR_EC, "DDSC_LOG_DR_FILTER_ERROR_EC", "DDSC", "(DDSC_LOG_BASE + 1003)", "dds_c/dds_c_log.h", "A datareader filter function failed"},
    {DDSC_LOG_DR_DESERIALIZE_KEYHASH_EC, "DDSC_LOG_DR_DESERIALIZE_KEYHASH_EC", "DDSC", "(DDSC_LOG_BASE + 1004)", "dds_c/dds_c_log.h", "Failed to deserialize a key-hash parameter"},
    {DDSC_LOG_DR_GET_ENTRY_FAILED_EC, "DDSC_LOG_DR_GET_ENTRY_FAILED_EC", "DDSC", "(DDSC_LOG_BASE + 1005)", "dds_c/dds_c_log.h", "Failed to get a Reader History entry for a received sample"},
    {DDSC_LOG_DR_COMMIT_ENTRY_EC, "DDSC_LOG_DR_COMMIT_ENTRY_EC", "DDSC", "(DDSC_LOG_BASE + 1006)", "dds_c/dds_c_log.h", "Failed to commit a receive sample to Reader History to be read or"},
    {DDSC_LOG_DR_UNREGISTER_KEY_EC, "DDSC_LOG_DR_UNREGISTER_KEY_EC", "DDSC", "(DDSC_LOG_BASE + 1007)", "dds_c/dds_c_log.h", "A DataReader failed to unregister an instance"},
    {DDSC_LOG_DR_DISPOSE_KEY_EC, "DDSC_LOG_DR_DISPOSE_KEY_EC", "DDSC", "(DDSC_LOG_BASE + 1008)", "dds_c/dds_c_log.h", "A DataReader failed to dispose an instance"},
    {DDSC_LOG_DR_READ_TAKE_FAILURE_EC, "DDSC_LOG_DR_READ_TAKE_FAILURE_EC", "DDSC", "(DDSC_LOG_BASE + 1009)", "dds_c/dds_c_log.h", "A call to a reader/take function failed"},
    {DDSC_LOG_DR_INSTANCE_TO_KEYHASH_EC, "DDSC_LOG_DR_INSTANCE_TO_KEYHASH_EC", "DDSC", "(DDSC_LOG_BASE + 1010)", "dds_c/dds_c_log.h", "Failed to create keyhash of instance handle"},
    {DDSC_LOG_TYPE_NAME_CMP_EC, "DDSC_LOG_TYPE_NAME_CMP_EC", "DDSC", "(DDSC_LOG_BASE + 1100)", "dds_c/dds_c_log.h", "Two type names are incompatible"},
    {DDSC_LOG_TOPIC_NAME_CMP_EC, "DDSC_LOG_TOPIC_NAME_CMP_EC", "DDSC", "(DDSC_LOG_BASE + 1101)", "dds_c/dds_c_log.h", "Two topic names are incompatible"},
    {DDSC_LOG_TYPE_FUNCTION_NULL_EC, "DDSC_LOG_TYPE_FUNCTION_NULL_EC", "DDSC", "(DDSC_LOG_BASE + 1102)", "dds_c/dds_c_log.h", "Invalid type plugin, The specified function pointer is NULL"},
    {DDSC_LOG_TOPIC_TOO_LONG_EC, "DDSC_LOG_TOPIC_TOO_LONG_EC", "DDSC", "(DDSC_LOG_BASE + 1103)", "dds_c/dds_c_log.h", "Failed to create a topic because the name exceeded the maximum"},
    {DDSC_LOG_TYPE_TOO_LONG_EC, "DDSC_LOG_TYPE_TOO_LONG_EC", "DDSC", "(DDSC_LOG_BASE + 1104)", "dds_c/dds_c_log.h", "Failed to create a type because the name exceeded the maximum"},
    {DDSC_LOG_LOOKUP_TYPE_PLUGIN_EC, "DDSC_LOG_LOOKUP_TYPE_PLUGIN_EC", "DDSC", "(DDSC_LOG_BASE + 1105)", "dds_c/dds_c_log.h", "A type-plugin for the given type could not be found"},
    {DDSC_LOG_DISC_LOCAL_PARTICIPANT_ENABLED_EC, "DDSC_LOG_DISC_LOCAL_PARTICIPANT_ENABLED_EC", "DDSC", "(DDSC_LOG_BASE + 1200)", "dds_c/dds_c_log.h", "Discovery plugin failed its update after a local DomainParticipant"},
    {DDSC_LOG_DISC_BEFORE_LOCAL_PARTICIPANT_CREATED_EC, "DDSC_LOG_DISC_BEFORE_LOCAL_PARTICIPANT_CREATED_EC", "DDSC", "(DDSC_LOG_BASE + 1201)", "dds_c/dds_c_log.h", "Discovery plugin failed its update before a local DomainParticipant"},
    {DDSC_LOG_DISC_AFTER_LOCAL_PARTICIPANT_CREATED_EC, "DDSC_LOG_DISC_AFTER_LOCAL_PARTICIPANT_CREATED_EC", "DDSC", "(DDSC_LOG_BASE + 1202)", "dds_c/dds_c_log.h", "Discovery plugin failed its update after a local DomainParticipant"},
    {DDSC_LOG_DISC_AFTER_LOCAL_DATAREADER_ENABLED_EC, "DDSC_LOG_DISC_AFTER_LOCAL_DATAREADER_ENABLED_EC", "DDSC", "(DDSC_LOG_BASE + 1203)", "dds_c/dds_c_log.h", "Discovery plugin failed its update after a local DataReader"},
    {DDSC_LOG_DISC_AFTER_LOCAL_DATAREADER_DELETED_EC, "DDSC_LOG_DISC_AFTER_LOCAL_DATAREADER_DELETED_EC", "DDSC", "(DDSC_LOG_BASE + 1204)", "dds_c/dds_c_log.h", "Discovery plugin failed its update after a local DataReader"},
    {DDSC_LOG_DISC_AFTER_LOCAL_DATAWRITER_ENABLED_EC, "DDSC_LOG_DISC_AFTER_LOCAL_DATAWRITER_ENABLED_EC", "DDSC", "(DDSC_LOG_BASE + 1205)", "dds_c/dds_c_log.h", "Discovery plugin failed its update after a local DataWriter"},
    {DDSC_LOG_DISC_AFTER_LOCAL_DATAWRITER_DELETED_EC, "DDSC_LOG_DISC_AFTER_LOCAL_DATAWRITER_DELETED_EC", "DDSC", "(DDSC_LOG_BASE + 1206)", "dds_c/dds_c_log.h", "Discovery plugin failed its update after a local DataWriter"},
    {DDSC_LOG_DISC_REMOTE_PARTICIPANT_EXPIRED_EC, "DDSC_LOG_DISC_REMOTE_PARTICIPANT_EXPIRED_EC", "DDSC", "(DDSC_LOG_BASE + 1207)", "dds_c/dds_c_log.h", "Discovery plugin failed its update after a remote DomainParticipant's"},
    {DDSC_LOG_DISC_ADD_PEER_EC, "DDSC_LOG_DISC_ADD_PEER_EC", "DDSC", "(DDSC_LOG_BASE + 1208)", "dds_c/dds_c_log.h", "Failed to add a peer with discovery plugin"},
    {DPDE_LOG_CDR_SET_OFFSET_EC, "DPDE_LOG_CDR_SET_OFFSET_EC", "DPDE", "(DPDE_LOG_BASE + 1)", "disc_dpde/disc_dpde_log.h", "Failed to set current offset of stream"},
    {DPDE_LOG_SERIALIZE_ENTITY_NAME_EC, "DPDE_LOG_SERIALIZE_ENTITY_NAME_EC", "DPDE", "(DPDE_LOG_BASE + 2)", "disc_dpde/disc_dpde_log.h", "Failed to serialize Entity Name parameter"},
    {DPDE_LOG_SERIALIZE_TOPIC_NAME_EC, "DPDE_LOG_SERIALIZE_TOPIC_NAME_EC", "DPDE", "(DPDE_LOG_BASE + 3)", "disc_dpde/disc_dpde_log.h", "Failed to serialize Topic Name parameter"},
    {DPDE_LOG_SERIALIZE_TYPE_NAME_EC, "DPDE_LOG_SERIALIZE_TYPE_NAME_EC", "DPDE", "(DPDE_LOG_BASE + 4)", "disc_dpde/disc_dpde_log.h", "Failed to serialize Type Name parameter"},
    {DPDE_LOG_SERIALIZE_GUID_EC, "DPDE_LOG_SERIALIZE_GUID_EC", "DPDE", "(DPDE_LOG_BASE + 5)", "disc_dpde/disc_dpde_log.h", "Failed to serialize GUID key"},
    {DPDE_LOG_SERIALIZE_DEFAULT_UNICAST_EC, "DPDE_LOG_SERIALIZE_DEFAULT_UNICAST_EC", "DPDE", "(DPDE_LOG_BASE + 6)", "disc_dpde/disc_dpde_log.h", "Failed to serialize Default Unicast Locator parameter"},
    {DPDE_LOG_SERIALIZE_PROTOCOL_VERSION_EC, "DPDE_LOG_SERIALIZE_PROTOCOL_VERSION_EC", "DPDE", "(DPDE_LOG_BASE + 7)", "disc_dpde/disc_dpde_log.h", "Failed to serialize Protocol Version parameter"},
    {DPDE_LOG_DESERIALIZE_PROTOCOL_VERSION_EC, "DPDE_LOG_DESERIALIZE_PROTOCOL_VERSION_EC", "DPDE", "(DPDE_LOG_BASE + 8)", "disc_dpde/disc_dpde_log.h", "Failed to deserialize Protocol Version parameter"},
    {DPDE_LOG_DESERIALIZE_VENDOR_ID_EC, "DPDE_LOG_DESERIALIZE_VENDOR_ID_EC", "DPDE", "(DPDE_LOG_BASE + 9)", "disc_dpde/disc_dpde_log.h", "Failed to deserialize Vendor ID parameter"},
    {DPDE_LOG_SERIALIZE_VENDOR_ID_EC, "DPDE_LOG_SERIALIZE_VENDOR_ID_EC", "DPDE", "(DPDE_LOG_BASE + 10)", "disc_dpde/disc_dpde_log.h", "Failed to serialize Vendor ID parameter"},
    {DPDE_LOG_SERIALIZE_PRODUCT_VERSION_EC, "DPDE_LOG_SERIALIZE_PRODUCT_VERSION_EC", "DPDE", "(DPDE_LOG_BASE + 11)", "disc_dpde/disc_dpde_log.h", "Failed to serialize Product Version parameter"},
    {DPDE_LOG_SERIALIZE_LEASE_DURATION_EC, "DPDE_LOG_SERIALIZE_LEASE_DURATION_EC", "DPDE", "(DPDE_LOG_BASE + 12)", "disc_dpde/disc_dpde_log.h", "Failed to serialize Lease Duration parameter"},
    {DPDE_LOG_CREATE_PUBLISHER_EC, "DPDE_LOG_CREATE_PUBLISHER_EC", "DPDE", "(DPDE_LOG_BASE + 13)", "disc_dpde/disc_dpde_log.h", "Failed to create Publisher for built-in endpoint DataWriters"},
    {DPDE_LOG_CREATE_SUBSCRIBER_EC, "DPDE_LOG_CREATE_SUBSCRIBER_EC", "DPDE", "(DPDE_LOG_BASE + 14)", "disc_dpde/disc_dpde_log.h", "Failed to create Subscriber for built-in endpoint DataReaders"},
    {DPDE_LOG_CREATE_PARTICIPANT_DISCOVERY_EC, "DPDE_LOG_CREATE_PARTICIPANT_DISCOVERY_EC", "DPDE", "(DPDE_LOG_BASE + 15)", "disc_dpde/disc_dpde_log.h", "Failed to create built-in endpoint for participant discovery after"},
    {DPDE_LOG_CREATE_PUBLICATION_DISCOVERY_EC, "DPDE_LOG_CREATE_PUBLICATION_DISCOVERY_EC", "DPDE", "(DPDE_LOG_BASE + 16)", "disc_dpde/disc_dpde_log.h", "Failed to create built-in publication endpoint after creating local"},
    {DPDE_LOG_CREATE_SUBSCRIPTION_DISCOVERY_EC, "DPDE_LOG_CREATE_SUBSCRIPTION_DISCOVERY_EC", "DPDE", "(DPDE_LOG_BASE + 17)", "disc_dpde/disc_dpde_log.h", "Failed to create built-in subscription endpoint after creating local"},
    {DPDE_LOG_DELETE_SUBSCRIPTION_TOPIC_EC, "DPDE_LOG_DELETE_SUBSCRIPTION_TOPIC_EC", "DPDE", "(DPDE_LOG_BASE + 18)", "disc_dpde/disc_dpde_log.h", "Failed to delete subscription built-in topic"},
    {DPDE_LOG_DELETE_PUBLICATION_TOPIC_EC, "DPDE_LOG_DELETE_PUBLICATION_TOPIC_EC", "DPDE", "(DPDE_LOG_BASE + 19)", "disc_dpde/disc_dpde_log.h", "Failed to delete publication built-in topic"},
    {DPDE_LOG_DELETE_PARTICIPANT_TOPIC_EC, "DPDE_LOG_DELETE_PARTICIPANT_TOPIC_EC", "DPDE", "(DPDE_LOG_BASE + 20)", "disc_dpde/disc_dpde_log.h", "Failed to delete participant built-in topic"},
    {DPDE_LOG_DISPOSE_PARTICIPANT_EC, "DPDE_LOG_DISPOSE_PARTICIPANT_EC", "DPDE", "(DPDE_LOG_BASE + 21)", "disc_dpde/disc_dpde_log.h", "Failed to dispose built-in participant when"},
    {DPDE_LOG_ALLOCATE_DPDE_EC, "DPDE_LOG_ALLOCATE_DPDE_EC", "DPDE", "(DPDE_LOG_BASE + 22)", "disc_dpde/disc_dpde_log.h", "Out of memory to allocate discovery plugin"},
    {DPDE_LOG_SERIALIZE_BUILTIN_ENDPOINTS_EC, "DPDE_LOG_SERIALIZE_BUILTIN_ENDPOINTS_EC", "DPDE", "(DPDE_LOG_BASE + 23)", "disc_dpde/disc_dpde_log.h", "Failed to serialize Builtin Endpoint Mask parameter"},
    {DPDE_LOG_DESERIALIZE_BUILTIN_ENDPOINTS_EC, "DPDE_LOG_DESERIALIZE_BUILTIN_ENDPOINTS_EC", "DPDE", "(DPDE_LOG_BASE + 24)", "disc_dpde/disc_dpde_log.h", "Failed to deserialize Builtin Endpoint Mask parameter"},
    {DPDE_LOG_DESERIALIZE_UNKNOWN_PID_EC, "DPDE_LOG_DESERIALIZE_UNKNOWN_PID_EC", "DPDE", "(DPDE_LOG_BASE + 25)", "disc_dpde/disc_dpde_log.h", "Deserialized a parameter of unknown ID"},
    {DPDE_LOG_ANNOUNCEMENT_EC, "DPDE_LOG_ANNOUNCEMENT_EC", "DPDE", "(DPDE_LOG_BASE + 26)", "disc_dpde/disc_dpde_log.h", "Failed to write a dynamic participant discovery message"},
    {DPDE_LOG_UPDATE_PARTICIPANT_ASSERT_PERIOD_EC, "DPDE_LOG_UPDATE_PARTICIPANT_ASSERT_PERIOD_EC", "DPDE", "(DPDE_LOG_BASE + 27)", "disc_dpde/disc_dpde_log.h", "Failed to schedule an event to assert the next participant"},
    {DPDE_LOG_ADVANCE_SN_EC, "DPDE_LOG_ADVANCE_SN_EC", "DPDE", "(DPDE_LOG_BASE + 28)", "disc_dpde/disc_dpde_log.h", "Failed to advance the sequence number of a participant discovery"},
    {DPDE_LOG_ANNOUNCE_WRITE_EC, "DPDE_LOG_ANNOUNCE_WRITE_EC", "DPDE", "(DPDE_LOG_BASE + 29)", "disc_dpde/disc_dpde_log.h", "Failed to write initial participant discovery announcement"},
    {DPDE_LOG_SCHEDULE_FAST_ASSERTION_EC, "DPDE_LOG_SCHEDULE_FAST_ASSERTION_EC", "DPDE", "(DPDE_LOG_BASE + 30)", "disc_dpde/disc_dpde_log.h", "Failed to schedule event for asserting participant discovery"},
    {DPDE_LOG_REGISTER_TYPE_EC, "DPDE_LOG_REGISTER_TYPE_EC", "DPDE", "(DPDE_LOG_BASE + 32)", "disc_dpde/disc_dpde_log.h", "Failed to register a built-in type for discovery"},
    {DPDE_LOG_CREATE_TOPIC_EC, "DPDE_LOG_CREATE_TOPIC_EC", "DPDE", "(DPDE_LOG_BASE + 33)", "disc_dpde/disc_dpde_log.h", "Failed to create a topic for discovery"},
    {DPDE_LOG_CREATE_WRITER_EC, "DPDE_LOG_CREATE_WRITER_EC", "DPDE", "(DPDE_LOG_BASE + 34)", "disc_dpde/disc_dpde_log.h", "Failed to create a built-in DataWriter for discovery"},
    {DPDE_LOG_CREATE_READER_EC, "DPDE_LOG_CREATE_READER_EC", "DPDE", "(DPDE_LOG_BASE + 35)", "disc_dpde/disc_dpde_log.h", "Failed to create a built-in DataReader for discovery"},
    {DPDE_LOG_ASSERT_REMOTE_PARTICIPANT_EC, "DPDE_LOG_ASSERT_REMOTE_PARTICIPANT_EC", "DPDE", "(DPDE_LOG_BASE + 36)", "disc_dpde/disc_dpde_log.h", "Failed to assert and complete discovery of a remote participant"},
    {DPDE_LOG_ENABLE_REMOTE_PARTICIPANT_EC, "DPDE_LOG_ENABLE_REMOTE_PARTICIPANT_EC", "DPDE", "(DPDE_LOG_BASE + 37)", "disc_dpde/disc_dpde_log.h", "Failed to enable and complete discovery of a remote participant"},
    {DPDE_LOG_REFRESH_REMOTE_PARTICIPANT_EC, "DPDE_LOG_REFRESH_REMOTE_PARTICIPANT_EC", "DPDE", "(DPDE_LOG_BASE + 38)", "disc_dpde/disc_dpde_log.h", "Failed to refresh liveliness for a discovered remote participant"},
    {DPDE_LOG_TAKE_PARTICIPANT_SAMPLE_EC, "DPDE_LOG_TAKE_PARTICIPANT_SAMPLE_EC", "DPDE", "(DPDE_LOG_BASE + 39)", "disc_dpde/disc_dpde_log.h", "Failed to take a sample from a participant discovery DataReader"},
    {DPDE_LOG_INVALID_PARTICIPANT_SAMPLE_EC, "DPDE_LOG_INVALID_PARTICIPANT_SAMPLE_EC", "DPDE", "(DPDE_LOG_BASE + 40)", "disc_dpde/disc_dpde_log.h", "Received a participant discovery announcement with invalid state"},
    {DPDE_LOG_RETURN_PARTICIPANT_SAMPLE_EC, "DPDE_LOG_RETURN_PARTICIPANT_SAMPLE_EC", "DPDE", "(DPDE_LOG_BASE + 41)", "disc_dpde/disc_dpde_log.h", "Failed to return a loan on a participant discovery sample"},
    {DPDE_LOG_DISPOSE_PUBLICATION_EC, "DPDE_LOG_DISPOSE_PUBLICATION_EC", "DPDE", "(DPDE_LOG_BASE + 42)", "disc_dpde/disc_dpde_log.h", "Failed to dispose an instance for a publication"},
    {DPDE_LOG_DISPOSE_SUBSCRIPTION_EC, "DPDE_LOG_DISPOSE_SUBSCRIPTION_EC", "DPDE", "(DPDE_LOG_BASE + 43)", "disc_dpde/disc_dpde_log.h", "Failed to dispose an instance of a subscription"},
    {DPDE_LOG_ASSERT_REMOTE_PUBLICATION_EC, "DPDE_LOG_ASSERT_REMOTE_PUBLICATION_EC", "DPDE", "(DPDE_LOG_BASE + 44)", "disc_dpde/disc_dpde_log.h", "Failed to assert and complete discovery of a remote publication"},
    {DPDE_LOG_ASSERT_REMOTE_SUBSCRIPTION_EC, "DPDE_LOG_ASSERT_REMOTE_SUBSCRIPTION_EC", "DPDE", "(DPDE_LOG_BASE + 45)", "disc_dpde/disc_dpde_log.h", "Failed to assert and complete discovery of a remote subscription"},
    {DPDE_LOG_TAKE_PUBLICATION_SAMPLE_EC, "DPDE_LOG_TAKE_PUBLICATION_SAMPLE_EC", "DPDE", "(DPDE_LOG_BASE + 46)", "disc_dpde/disc_dpde_log.h", "Failed to take a sample from a publication discovery DataReader"},
    {DPDE_LOG_REMOVE_REMOTE_PUBLICATION_EC, "DPDE_LOG_REMOVE_REMOTE_PUBLICATION_EC", "DPDE", "(DPDE_LOG_BASE + 47)", "disc_dpde/disc_dpde_log.h", "Failed to dispose or unregister a remote publication instance"},
    {DPDE_LOG_INVALID_PUBLICATION_SAMPLE_EC, "DPDE_LOG_INVALID_PUBLICATION_SAMPLE_EC", "DPDE", "(DPDE_LOG_BASE + 48)", "disc_dpde/disc_dpde_log.h", "Received a publication discovery announcement with invalid state"},
    {DPDE_LOG_RETURN_PUBLICATION_SAMPLE_EC, "DPDE_LOG_RETURN_PUBLICATION_SAMPLE_EC", "DPDE", "(DPDE_LOG_BASE + 49)", "disc_dpde/disc_dpde_log.h", "Failed to return a loan on a publication discovery sample"},
    {DPDE_LOG_TAKE_SUBSCRIPTION_SAMPLE_EC, "DPDE_LOG_TAKE_SUBSCRIPTION_SAMPLE_EC", "DPDE", "(DPDE_LOG_BASE + 51)", "disc_dpde/disc_dpde_log.h", "Failed to take a sample from a subscription discovery DataReader"},
    {DPDE_LOG_INVALID_SUBSCRIPTION_SAMPLE_EC, "DPDE_LOG_INVALID_SUBSCRIPTION_SAMPLE_EC", "DPDE", "(DPDE_LOG_BASE + 52)", "disc_dpde/disc_dpde_log.h", "Received a subscription discovery sample with invalid state"},
    {DPDE_LOG_RETURN_SUBSCRIPTION_SAMPLE_EC, "DPDE_LOG_RETURN_SUBSCRIPTION_SAMPLE_EC", "DPDE", "(DPDE_LOG_BASE + 53)", "disc_dpde/disc_dpde_log.h", "Failed to return a loan on a subscription discovery sample"},
    {DPDE_LOG_REMOVE_REMOTE_SUBSCRIPTION_EC, "DPDE_LOG_REMOVE_REMOTE_SUBSCRIPTION_EC", "DPDE", "(DPDE_LOG_BASE + 54)", "disc_dpde/disc_dpde_log.h", "Failed to dispose or unregister a remote subscription instance"},
    {DPDE_LOG_LOCATORS_FULL_EC, "DPDE_LOG_LOCATORS_FULL_EC", "DPDE", "(DPDE_LOG_BASE + 55)", "disc_dpde/disc_dpde_log.h", "A locator sequence is full, the remaining locators of the specified"},
    {DPDE_LOG_DESERIALIZE_LOCATOR_EC, "DPDE_LOG_DESERIALIZE_LOCATOR_EC", "DPDE", "(DPDE_LOG_BASE + 56)", "disc_dpde/disc_dpde_log.h", "Failed to deserialize a locator of the specified kind"},
    {DPDE_LOG_UNSUPPORTED_LOCATOR_EC, "DPDE_LOG_UNSUPPORTED_LOCATOR_EC", "DPDE", "(DPDE_LOG_BASE + 57)", "disc_dpde/disc_dpde_log.h", "The locator kind is not supported by any transport registered with the"},
    {DPDE_LOG_ADD_PEER_EC, "DPDE_LOG_ADD_PEER_EC", "DPDE", "(DPDE_LOG_BASE + 58)", "disc_dpde/disc_dpde_log.h", "Failed to add the specified entity as a peer"},
    {DPDE_LOG_REMOVE_PEER_EC, "DPDE_LOG_REMOVE_PEER_EC", "DPDE", "(DPDE_LOG_BASE + 59)", "disc_dpde/disc_dpde_log.h", "Failed to add the specified entity as a peer"},
    {DPSE_LOG_INVALID_PEER_ADDRESS_EC, "DPSE_LOG_INVALID_PEER_ADDRESS_EC", "DPSE", "(DPSE_LOG_BASE + 1)", "disc_dpse/disc_dpse_log.h", "A peer address string specifies an invalid address"},
    {DPSE_LOG_CREATE_DISCOVERY_PUBLISHER_EC, "DPSE_LOG_CREATE_DISCOVERY_PUBLISHER_EC", "DPSE", "(DPSE_LOG_BASE + 2)", "disc_dpse/disc_dpse_log.h", "Failed to create the publisher for a participant discovery writer"},
    {DPSE_LOG_CREATE_DISCOVERY_SUBSCRIBER_EC, "DPSE_LOG_CREATE_DISCOVERY_SUBSCRIBER_EC", "DPSE", "(DPSE_LOG_BASE + 3)", "disc_dpse/disc_dpse_log.h", "Failed to create the subscriber for a participant discovery datareader"},
    {DPSE_LOG_REGISTER_TYPE_EC, "DPSE_LOG_REGISTER_TYPE_EC", "DPSE", "(DPSE_LOG_BASE + 4)", "disc_dpse/disc_dpse_log.h", "Failed to register a built-in participant discovery type"},
    {DPSE_LOG_CREATE_TOPIC_EC, "DPSE_LOG_CREATE_TOPIC_EC", "DPSE", "(DPSE_LOG_BASE + 5)", "disc_dpse/disc_dpse_log.h", "Failed to create a topic for the built-in participant discovery topic"},
    {DPSE_LOG_CREATE_WRITER_EC, "DPSE_LOG_CREATE_WRITER_EC", "DPSE", "(DPSE_LOG_BASE + 6)", "disc_dpse/disc_dpse_log.h", "Failed to create a DataWriter for participant discovery"},
    {DPSE_LOG_CREATE_READER_EC, "DPSE_LOG_CREATE_READER_EC", "DPSE", "(DPSE_LOG_BASE + 7)", "disc_dpse/disc_dpse_log.h", "Failed to create a DataReader for participant discovery"},
    {DPSE_LOG_DISPOSE_EC, "DPSE_LOG_DISPOSE_EC", "DPSE", "(DPSE_LOG_BASE + 8)", "disc_dpse/disc_dpse_log.h", "Failed to dispose a participant discovery instance"},
    {DPSE_LOG_ANNOUNCE_LOCAL_PARTICIPANT_DELETION_EC, "DPSE_LOG_ANNOUNCE_LOCAL_PARTICIPANT_DELETION_EC", "DPSE", "(DPSE_LOG_BASE + 9)", "disc_dpse/disc_dpse_log.h", "Failed to dispose a participant discovery instance upon deletion"},
    {DPSE_LOG_DELETE_WRITER_EC, "DPSE_LOG_DELETE_WRITER_EC", "DPSE", "(DPSE_LOG_BASE + 10)", "disc_dpse/disc_dpse_log.h", "Failed to delete a participant discovery DataWriter"},
    {DPSE_LOG_DELETE_PUBLISHER_EC, "DPSE_LOG_DELETE_PUBLISHER_EC", "DPSE", "(DPSE_LOG_BASE + 11)", "disc_dpse/disc_dpse_log.h", "Failed to delete a participant discovery Publisher"},
    {DPSE_LOG_DELETE_READER_EC, "DPSE_LOG_DELETE_READER_EC", "DPSE", "(DPSE_LOG_BASE + 12)", "disc_dpse/disc_dpse_log.h", "Failed to delete a participant discovery DataReader"},
    {DPSE_LOG_DELETE_TOPIC_EC, "DPSE_LOG_DELETE_TOPIC_EC", "DPSE", "(DPSE_LOG_BASE + 13)", "disc_dpse/disc_dpse_log.h", "Failed to delete a participant discovery Topic"},
    {DPSE_LOG_DELETE_SUBSCRIBER_EC, "DPSE_LOG_DELETE_SUBSCRIBER_EC", "DPSE", "(DPSE_LOG_BASE + 14)", "disc_dpse/disc_dpse_log.h", "Failed to delete a participant discovery Subscriber"},
    {DPSE_LOG_OBJECT_ALLOCATE_EC, "DPSE_LOG_OBJECT_ALLOCATE_EC", "DPSE", "(DPSE_LOG_BASE + 15)", "disc_dpse/disc_dpse_log.h", "Failed to allocate an object of the specified kind"},
    {DPSE_LOG_OBJECT_INITIALIZE_EC, "DPSE_LOG_OBJECT_INITIALIZE_EC", "DPSE", "(DPSE_LOG_BASE + 16)", "disc_dpse/disc_dpse_log.h", "Failed to initialize an object of the specified kind"},
    {DPSE_LOG_OBJECT_FINALIZE_EC, "DPSE_LOG_OBJECT_FINALIZE_EC", "DPSE", "(DPSE_LOG_BASE + 17)", "disc_dpse/disc_dpse_log.h", "Failed to finalize an object of the specified kind"},
    {DPSE_LOG_OBJECT_DELETE_EC, "DPSE_LOG_OBJECT_DELETE_EC", "DPSE", "(DPSE_LOG_BASE + 18)", "disc_dpse/disc_dpse_log.h", "Failed to delete an object of the specified kind"},
    {DPSE_LOG_OBJECT_INVALID_EC, "DPSE_LOG_OBJECT_INVALID_EC", "DPSE", "(DPSE_LOG_BASE + 19)", "disc_dpse/disc_dpse_log.h", "The object was invalid in the context it was used"},
    {DPSE_LOG_CDR_SET_POSITION_EC, "DPSE_LOG_CDR_SET_POSITION_EC", "DPSE", "(DPSE_LOG_BASE + 20)", "disc_dpse/disc_dpse_log.h", "Failed to set the CDR stream position"},
    {DPSE_LOG_CDR_SERIALIZE_EC, "DPSE_LOG_CDR_SERIALIZE_EC", "DPSE", "(DPSE_LOG_BASE + 21)", "disc_dpse/disc_dpse_log.h", "Failed to serialize the specified kind"},
    {DPSE_LOG_CDR_DESERIALIZE_EC, "DPSE_LOG_CDR_DESERIALIZE_EC", "DPSE", "(DPSE_LOG_BASE + 22)", "disc_dpse/disc_dpse_log.h", "Failed to deserialize the specified kind"},
    {DPSE_LOG_SERIALIZE_GUID_EC, "DPSE_LOG_SERIALIZE_GUID_EC", "DPSE", "(DPSE_LOG_BASE + 23)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a GUID key parameter"},
    {DPSE_LOG_SERIALIZE_BUILTIN_ENDPOINTS_EC, "DPSE_LOG_SERIALIZE_BUILTIN_ENDPOINTS_EC", "DPSE", "(DPSE_LOG_BASE + 24)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Builtin Endpoint Mask parameter"},
    {DPSE_LOG_SERIALIZE_PROTOCOL_VERSION_EC, "DPSE_LOG_SERIALIZE_PROTOCOL_VERSION_EC", "DPSE", "(DPSE_LOG_BASE + 25)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Protocol Version parameter"},
    {DPSE_LOG_SERIALIZE_VENDOR_ID_EC, "DPSE_LOG_SERIALIZE_VENDOR_ID_EC", "DPSE", "(DPSE_LOG_BASE + 26)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Vendor ID parameter"},
    {DPSE_LOG_SERIALIZE_DEFAULT_UNICAST_EC, "DPSE_LOG_SERIALIZE_DEFAULT_UNICAST_EC", "DPSE", "(DPSE_LOG_BASE + 27)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Default Unicast Locator parameter"},
    {DPSE_LOG_SERIALIZE_META_UNICAST_EC, "DPSE_LOG_SERIALIZE_META_UNICAST_EC", "DPSE", "(DPSE_LOG_BASE + 28)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Meta Unicast Locator parameter"},
    {DPSE_LOG_SERIALIZE_META_MULTICAST_EC, "DPSE_LOG_SERIALIZE_META_MULTICAST_EC", "DPSE", "(DPSE_LOG_BASE + 29)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Meta Multicast Locator parameter"},
    {DPSE_LOG_SERIALIZE_LEASE_DURATION_EC, "DPSE_LOG_SERIALIZE_LEASE_DURATION_EC", "DPSE", "(DPSE_LOG_BASE + 30)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Lease Duration parameter"},
    {DPSE_LOG_SERIALIZE_PRODUCT_VERSION_EC, "DPSE_LOG_SERIALIZE_PRODUCT_VERSION_EC", "DPSE", "(DPSE_LOG_BASE + 31)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Product Version parameter"},
    {DPSE_LOG_DESERIALIZE_PRODUCT_VERSION_EC, "DPSE_LOG_DESERIALIZE_PRODUCT_VERSION_EC", "DPSE", "(DPSE_LOG_BASE + 32)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Product Version parameter"},
    {DPSE_LOG_SERIALIZE_PARTICIPANT_NAME_EC, "DPSE_LOG_SERIALIZE_PARTICIPANT_NAME_EC", "DPSE", "(DPSE_LOG_BASE + 33)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Participant Name parameter"},
    {DPSE_LOG_DESERIALIZE_GUID_EC, "DPSE_LOG_DESERIALIZE_GUID_EC", "DPSE", "(DPSE_LOG_BASE + 34)", "disc_dpse/disc_dpse_log.h", "Failed to deserialize a GUID key parameter"},
    {DPSE_LOG_DESERIALIZE_BUILTIN_ENDPOINTS_EC, "DPSE_LOG_DESERIALIZE_BUILTIN_ENDPOINTS_EC", "DPSE", "(DPSE_LOG_BASE + 35)", "disc_dpse/disc_dpse_log.h", "Failed to deserialize a Builtin Endpoint Mask parameter"},
    {DPSE_LOG_DESERIALIZE_PROTOCOL_VERSION_EC, "DPSE_LOG_DESERIALIZE_PROTOCOL_VERSION_EC", "DPSE", "(DPSE_LOG_BASE + 36)", "disc_dpse/disc_dpse_log.h", "Failed to deserialize a Protocol Version parameter"},
    {DPSE_LOG_DESERIALIZE_VENDOR_ID_EC, "DPSE_LOG_DESERIALIZE_VENDOR_ID_EC", "DPSE", "(DPSE_LOG_BASE + 37)", "disc_dpse/disc_dpse_log.h", "Failed to deserialize a Vendor ID parameter"},
    {DPSE_LOG_DESERIALIZE_TOO_MANY_LOCATORS_EC, "DPSE_LOG_DESERIALIZE_TOO_MANY_LOCATORS_EC", "DPSE", "(DPSE_LOG_BASE + 38)", "disc_dpse/disc_dpse_log.h", "Cannot deserialize another locator parameter, having reached maximum"},
    {DPSE_LOG_DESERIALIZE_PARTICIPANT_NAME_EC, "DPSE_LOG_DESERIALIZE_PARTICIPANT_NAME_EC", "DPSE", "(DPSE_LOG_BASE + 39)", "disc_dpse/disc_dpse_log.h", "Failed to deserialize a Participant Name parameter"},
    {DPSE_LOG_DESERIALIZE_UNKNOWN_PID_EC, "DPSE_LOG_DESERIALIZE_UNKNOWN_PID_EC", "DPSE", "(DPSE_LOG_BASE + 40)", "disc_dpse/disc_dpse_log.h", "Failed to deserialize a parameter with an unknown ID"},
    {DPSE_LOG_ANNOUNCEMENT_EC, "DPSE_LOG_ANNOUNCEMENT_EC", "DPSE", "(DPSE_LOG_BASE + 41)", "disc_dpse/disc_dpse_log.h", "Failed to send a participant discovery announcement"},
    {DPSE_LOG_UPDATE_PARTICIPANT_ASSERT_PERIOD_EC, "DPSE_LOG_UPDATE_PARTICIPANT_ASSERT_PERIOD_EC", "DPSE", "(DPSE_LOG_BASE + 42)", "disc_dpse/disc_dpse_log.h", "Failed to schedule an event to send the next participant discovery"},
    {DPSE_LOG_ADVANCE_SN_EC, "DPSE_LOG_ADVANCE_SN_EC", "DPSE", "(DPSE_LOG_BASE + 43)", "disc_dpse/disc_dpse_log.h", "Failed to advance the sequence number of a participant discovery"},
    {DPSE_LOG_ANNOUNCE_WRITE_EC, "DPSE_LOG_ANNOUNCE_WRITE_EC", "DPSE", "(DPSE_LOG_BASE + 44)", "disc_dpse/disc_dpse_log.h", "Failed to write a participant discovery announcement message"},
    {DPSE_LOG_SCHEDULE_FAST_ASSERTION_EC, "DPSE_LOG_SCHEDULE_FAST_ASSERTION_EC", "DPSE", "(DPSE_LOG_BASE + 45)", "disc_dpse/disc_dpse_log.h", "Failed to schedule an event to send the next participant discovery"},
    {DPSE_LOG_PARTICIPANT_TAKE_EC, "DPSE_LOG_PARTICIPANT_TAKE_EC", "DPSE", "(DPSE_LOG_BASE + 46)", "disc_dpse/disc_dpse_log.h", "Failed to take a sample from a participant discovery DataReader"},
    {DPSE_LOG_ASSERT_REMOTE_PARTICIPANT_EC, "DPSE_LOG_ASSERT_REMOTE_PARTICIPANT_EC", "DPSE", "(DPSE_LOG_BASE + 47)", "disc_dpse/disc_dpse_log.h", "Failed to assert remote participant"},
    {DPSE_LOG_ON_ASSERT_REMOTE_PARTICIPANT_EC, "DPSE_LOG_ON_ASSERT_REMOTE_PARTICIPANT_EC", "DPSE", "(DPSE_LOG_BASE + 48)", "disc_dpse/disc_dpse_log.h", "Failed to assert and complete discovery of a remote participant"},
    {DPSE_LOG_ADD_ANONYMOUS_ROUTE_EC, "DPSE_LOG_ADD_ANONYMOUS_ROUTE_EC", "DPSE", "(DPSE_LOG_BASE + 49)", "disc_dpse/disc_dpse_log.h", "Failed to add an anonymous route"},
    {DPSE_LOG_DELETE_ANONYMOUS_ROUTE_EC, "DPSE_LOG_DELETE_ANONYMOUS_ROUTE_EC", "DPSE", "(DPSE_LOG_BASE + 50)", "disc_dpse/disc_dpse_log.h", "Failed to delete an anonymous route"},
    {DPSE_LOG_MAX_REMOTE_PARTICIPANT_EC, "DPSE_LOG_MAX_REMOTE_PARTICIPANT_EC", "DPSE", "(DPSE_LOG_BASE + 51)", "disc_dpse/disc_dpse_log.h", "Exceeded resource limit, remote_participant_allocation"},
    {DPSE_LOG_REFRESH_REMOTE_PARTICIPANT_EC, "DPSE_LOG_REFRESH_REMOTE_PARTICIPANT_EC", "DPSE", "(DPSE_LOG_BASE + 52)", "disc_dpse/disc_dpse_log.h", "Failed to refresh liveliness for a remote participant"},
    {DPSE_LOG_RESET_REMOTE_PARTICIPANT_EC, "DPSE_LOG_RESET_REMOTE_PARTICIPANT_EC", "DPSE", "(DPSE_LOG_BASE + 53)", "disc_dpse/disc_dpse_log.h", "Failed to reset liveliness for a remote participant"},
    {DPSE_LOG_INVALID_DISCOVERY_SAMPLE_EC, "DPSE_LOG_INVALID_DISCOVERY_SAMPLE_EC", "DPSE", "(DPSE_LOG_BASE + 54)", "disc_dpse/disc_dpse_log.h", "Received a participant discovery announcement with invalid state"},
    {DPSE_LOG_RETURN_DISCOVERY_SAMPLE_EC, "DPSE_LOG_RETURN_DISCOVERY_SAMPLE_EC", "DPSE", "(DPSE_LOG_BASE + 55)", "disc_dpse/disc_dpse_log.h", "Failed to return a loan on a participant discovery announcement"},
    {DPSE_LOG_SERIALIZE_MULTICAST_EC, "DPSE_LOG_SERIALIZE_MULTICAST_EC", "DPSE", "(DPSE_LOG_BASE + 56)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Multicast Locator parameter"},
    {DPSE_LOG_GET_DDS_PROPERTIES_EC, "DPSE_LOG_GET_DDS_PROPERTIES_EC", "DPSE", "(DPSE_LOG_BASE + 57)", "disc_dpse/disc_dpse_log.h", "Failed to serialize a Multicast Locator parameter"},
    {DPSE_LOG_ENTITY_ENABLE_EC, "DPSE_LOG_ENTITY_ENABLE_EC", "DPSE", "(DPSE_LOG_BASE + 58)", "disc_dpse/disc_dpse_log.h", "Failed to enable the specified entity kind"},
    {DPSE_LOG_SEQUENCE_SETMAX_EC, "DPSE_LOG_SEQUENCE_SETMAX_EC", "DPSE", "(DPSE_LOG_BASE + 59)", "disc_dpse/disc_dpse_log.h", "Failed to set the maximum length of a sequence of the specified kind."},
    {DPSE_LOG_SEQUENCE_SETLENGTH_EC, "DPSE_LOG_SEQUENCE_SETLENGTH_EC", "DPSE", "(DPSE_LOG_BASE + 60)", "disc_dpse/disc_dpse_log.h", "Failed to set the length of a sequence of the specified kind."},
    {DPSE_LOG_SEQUENCE_GETREF_EC, "DPSE_LOG_SEQUENCE_GETREF_EC", "DPSE", "(DPSE_LOG_BASE + 61)", "disc_dpse/disc_dpse_log.h", "Failed to get a reference at the specified index for a sequence of"},
    {DPSE_LOG_SEQUENCE_INITIALIZE_EC, "DPSE_LOG_SEQUENCE_INITIALIZE_EC", "DPSE", "(DPSE_LOG_BASE + 62)", "disc_dpse/disc_dpse_log.h", "Failed to initialize a sequence of the specified kind."},
    {DPSE_LOG_SEQUENCE_FINALIZE_EC, "DPSE_LOG_SEQUENCE_FINALIZE_EC", "DPSE", "(DPSE_LOG_BASE + 63)", "disc_dpse/disc_dpse_log.h", "Failed to finalize a sequence of the specified kind."},
    {DPSE_LOG_SEQUENCE_COPY_EC, "DPSE_LOG_SEQUENCE_COPY_EC", "DPSE", "(DDSC_LOG_BASE + 64)", "disc_dpse/disc_dpse_log.h", "Failed to copy a sequence of the specified kind."},
    {DPSE_LOG_GET_TIMER_EC, "DPSE_LOG_GET_TIMER_EC", "DPSE", "(DDSC_LOG_BASE + 65)", "disc_dpse/disc_dpse_log.h", "Failed to copy a sequence of the specified kind."},
    {DPSE_LOG_UNSUPPORTED_LOCATOR_EC, "DPSE_LOG_UNSUPPORTED_LOCATOR_EC", "DPSE", "(DPDE_LOG_BASE + 66)", "disc_dpse/disc_dpse_log.h", "The locator kind is not supported by any transport registered with the"},
    {NETIO_LOG_GETHOST_BYNAME_EC, "NETIO_LOG_GETHOST_BYNAME_EC", "NETIO", "(NETIO_LOG_BASE + 1)", "netio/netio_log.h", "Failed to get host address from a string representation"},
    {NETIO_LOG_BIND_NEW_EC, "NETIO_LOG_BIND_NEW_EC", "NETIO", "(NETIO_LOG_BASE + 2)", "netio/netio_log.h", "Failed to allocate memory for a bind-resolver"},
    {NETIO_LOG_BIND_NEW_RTABLE_EC, "NETIO_LOG_BIND_NEW_RTABLE_EC", "NETIO", "(NETIO_LOG_BASE + 3)", "netio/netio_log.h", "Failed to create a database table for routes of a bind-resolver"},
    {NETIO_LOG_BIND_CREATE_RTABLE_EC, "NETIO_LOG_BIND_CREATE_RTABLE_EC", "NETIO", "(NETIO_LOG_BASE + 4)", "netio/netio_log.h", "Failed to create route record."},
    {NETIO_LOG_BIND_DELETE_RTABLE_EC, "NETIO_LOG_BIND_DELETE_RTABLE_EC", "NETIO", "(NETIO_LOG_BASE + 5)", "netio/netio_log.h", "Failed to delete a database table for routes of a bind_resolver"},
    {NETIO_LOG_BIND_SET_LENGTH_EC, "NETIO_LOG_BIND_SET_LENGTH_EC", "NETIO", "(NETIO_LOG_BASE + 6)", "netio/netio_log.h", "Failed to set the length for a sequence of resolved addresses"},
    {NETIO_LOG_BIND_SET_MAX_EC, "NETIO_LOG_BIND_SET_MAX_EC", "NETIO", "(NETIO_LOG_BASE + 7)", "netio/netio_log.h", "Failed to set the maximum length of an internal sequence of addresses"},
    {NETIO_LOG_BIND_EXTERNAL_FAILED_EC, "NETIO_LOG_BIND_EXTERNAL_FAILED_EC", "NETIO", "(NETIO_LOG_BASE + 8)", "netio/netio_log.h", "An interface failed on bind_external"},
    {NETIO_LOG_UNBIND_EXTERNAL_FAILED_EC, "NETIO_LOG_UNBIND_EXTERNAL_FAILED_EC", "NETIO", "(NETIO_LOG_BASE + 10)", "netio/netio_log.h", "An interface failed on unbind_external"},
    {NETIO_LOG_ROUTE_RTABLE_ALLOC_EC, "NETIO_LOG_ROUTE_RTABLE_ALLOC_EC", "NETIO", "(NETIO_LOG_BASE + 11)", "netio/netio_log.h", "Failed to allocate memory for a route resolver"},
    {NETIO_LOG_ROUTE_RTABLE_CREATE_EC, "NETIO_LOG_ROUTE_RTABLE_CREATE_EC", "NETIO", "(NETIO_LOG_BASE + 12)", "netio/netio_log.h", "Failed to create a database table for routes of a route-resolver"},
    {NETIO_LOG_ROUTE_RTABLE_DELETE_EC, "NETIO_LOG_ROUTE_RTABLE_DELETE_EC", "NETIO", "(NETIO_LOG_BASE + 13)", "netio/netio_log.h", "Failed to delete a database table for routes of a route-resolver"},
    {NETIO_LOG_ROUTE_RTABLE_ADD_EC, "NETIO_LOG_ROUTE_RTABLE_ADD_EC", "NETIO", "(NETIO_LOG_BASE + 14)", "netio/netio_log.h", "Failed to create route resolver record."},
    {NETIO_LOG_ROUTE_RTABLE_UPDATE_EC, "NETIO_LOG_ROUTE_RTABLE_UPDATE_EC", "NETIO", "(NETIO_LOG_BASE + 15)", "netio/netio_log.h", "Failed to find routes to update for a route-resolver"},
    {NETIO_LOG_AR_ALLOC_FAILED_EC, "NETIO_LOG_AR_ALLOC_FAILED_EC", "NETIO", "(NETIO_LOG_BASE + 16)", "netio/netio_log.h", "Failed to allocate memory for address resolver"},
    {NETIO_LOG_AR_ADD_INVALID_INTERFACE_EC, "NETIO_LOG_AR_ADD_INVALID_INTERFACE_EC", "NETIO", "(NETIO_LOG_BASE + 17)", "netio/netio_log.h", "An attempt was made to add an existing interface with a different"},
    {NETIO_LOG_AR_ADDRESS_RESOLVE_FAILED_EC, "NETIO_LOG_AR_ADDRESS_RESOLVE_FAILED_EC", "NETIO", "(NETIO_LOG_BASE + 18)", "netio/netio_log.h", "An interface failed to resolve an address."},
    {NETIO_LOG_AR_PORT_RESOLVE_FAILED_EC, "NETIO_LOG_AR_PORT_RESOLVE_FAILED_EC", "NETIO", "(NETIO_LOG_BASE + 19)", "netio/netio_log.h", "An interface failed to resolve a port."},
    {NETIO_LOG_AR_CONTEXT_UNINITIALIZED_EC, "NETIO_LOG_AR_CONTEXT_UNINITIALIZED_EC", "NETIO", "(NETIO_LOG_BASE + 21)", "netio/netio_log.h", "NETIO_AddressResolver_resolve/get_next was called with an"},
    {NETIO_LOG_AR_INVALID_TOKEN_EC, "NETIO_LOG_AR_INVALID_TOKEN_EC", "NETIO", "(NETIO_LOG_BASE + 22)", "netio/netio_log.h", "An invalid token was encountered in the address string"},
    {NETIO_LOG_AR_ADDRESS_STRING_EXCEEDED_EC, "NETIO_LOG_AR_ADDRESS_STRING_EXCEEDED_EC", "NETIO", "(NETIO_LOG_BASE + 23)", "netio/netio_log.h", "The length of the address exceeded the address buffer passed in"},
    {NETIO_LOG_INVALID_ADDRESS_INDEX_EC, "NETIO_LOG_INVALID_ADDRESS_INDEX_EC", "NETIO", "(NETIO_LOG_BASE + 24)", "netio/netio_log.h", "An address index was not parsed correctly"},
    {NETIO_LOG_ILLEGAL_ROUTE_OPERATION_EC, "NETIO_LOG_ILLEGAL_ROUTE_OPERATION_EC", "NETIO", "(NETIO_LOG_BASE + 25)", "netio/netio_log.h", "Illegal route operation attempted"},
    {NETIO_LOG_SET_NAME_EC, "NETIO_LOG_SET_NAME_EC", "NETIO", "(UDP_LOG_BASE + 26)", "netio/netio_log.h", "Failed to set the name of a runtime component interface"},
    {NETIO_LOG_PACKET_SET_HEAD_EC, "NETIO_LOG_PACKET_SET_HEAD_EC", "NETIO", "(UDP_LOG_BASE + 27)", "netio/netio_log.h", "Failed to set packet's head"},
    {NETIO_LOG_PACKET_SET_TAIL_EC, "NETIO_LOG_PACKET_SET_TAIL_EC", "NETIO", "(UDP_LOG_BASE + 28)", "netio/netio_log.h", "Failed to set packet's tail"},
    {NETIO_LOG_PACKET_INITIALIZE_EC, "NETIO_LOG_PACKET_INITIALIZE_EC", "NETIO", "(UDP_LOG_BASE + 29)", "netio/netio_log.h", "Failed to initialize packet"},
    {NETIO_LOG_LOOP_DELETE_TABLE_EC, "NETIO_LOG_LOOP_DELETE_TABLE_EC", "NETIO", "(NETIO_LOG_BASE + 100)", "netio/netio_log.h", "Failed to delete a database table for a NETIO loopback interface"},
    {NETIO_LOG_LOOP_CREATE_TABLE_EC, "NETIO_LOG_LOOP_CREATE_TABLE_EC", "NETIO", "(NETIO_LOG_BASE + 101)", "netio/netio_log.h", "Failed to create a database table for a NETIO loopback interface"},
    {NETIO_LOG_LOOP_SELECT_TABLE_EC, "NETIO_LOG_LOOP_SELECT_TABLE_EC", "NETIO", "(NETIO_LOG_BASE + 102)", "netio/netio_log.h", "Failed to select a valid record when sending with the NETIO loopback"},
    {NETIO_LOG_LOOP_FWD_EC, "NETIO_LOG_LOOP_FWD_EC", "NETIO", "(NETIO_LOG_BASE + 103)", "netio/netio_log.h", "Failed to send forward with the NETIO loopback interface"},
    {NETIO_LOG_LOOP_BINDX_DB_EC, "NETIO_LOG_LOOP_BINDX_DB_EC", "NETIO", "(NETIO_LOG_BASE + 104)", "netio/netio_log.h", "Failed to bind an external interface with the NETIO loopback interface"},
    {NETIO_LOG_LOOP_UNBINDX_DB_EC, "NETIO_LOG_LOOP_UNBINDX_DB_EC", "NETIO", "(NETIO_LOG_BASE + 105)", "netio/netio_log.h", "Failed to unbind an external interface with the NETIO loopback"},
    {NETIO_LOG_LOOP_SET_LENGTH_EC, "NETIO_LOG_LOOP_SET_LENGTH_EC", "NETIO", "(NETIO_LOG_BASE + 106)", "netio/netio_log.h", "Failed to set the length of an address sequence"},
    {NETIO_LOG_LOOP_INVALID_PROPERTY_EC, "NETIO_LOG_LOOP_INVALID_PROPERTY_EC", "NETIO", "(NETIO_LOG_BASE + 107)", "netio/netio_log.h", "Invalid property passed in when creating a loopback interface"},
    {NETIO_LOG_LOOP_INITIALIZE_FAILED_EC, "NETIO_LOG_LOOP_INITIALIZE_FAILED_EC", "NETIO", "(NETIO_LOG_BASE + 108)", "netio/netio_log.h", "Failed to initialize the loopback interface"},
    {NETIO_LOG_LOOP_CURSOR_ERROR_EC, "NETIO_LOG_LOOP_CURSOR_ERROR_EC", "NETIO", "(NETIO_LOG_BASE + 109)", "netio/netio_log.h", "An error occurred with a cursor while iterating over a table"},
    {NETIO_LOG_LOOP_INVALID_FACTORY_EC, "NETIO_LOG_LOOP_INVALID_FACTORY_EC", "NETIO", "(NETIO_LOG_BASE + 110)", "netio/netio_log.h", "An invalid factory was passed in to create a loopback interface"},
    {NETIO_LOG_LOOP_INVALID_COMPONENT_EC, "NETIO_LOG_LOOP_INVALID_COMPONENT_EC", "NETIO", "(NETIO_LOG_BASE + 111)", "netio/netio_log.h", "An invalid component was passed in to delete a loopback interface"},
    {UDP_LOG_SOCKET_INIT_EC, "UDP_LOG_SOCKET_INIT_EC", "UDP", "(UDP_LOG_BASE + 200)", "netio/netio_log.h", "Failed to initialize use of sockets"},
    {UDP_LOG_GETHOSTNAME_EC, "UDP_LOG_GETHOSTNAME_EC", "UDP", "(UDP_LOG_BASE + 201)", "netio/netio_log.h", "Failed to get the host address given the host name"},
    {UDP_LOG_SOCKET_SET_MCAST_EC, "UDP_LOG_SOCKET_SET_MCAST_EC", "UDP", "(UDP_LOG_BASE + 202)", "netio/netio_log.h", "Failed to set a socket for multicast loopback"},
    {UDP_LOG_SOCKET_SET_MCASTIF_EC, "UDP_LOG_SOCKET_SET_MCASTIF_EC", "UDP", "(UDP_LOG_BASE + 203)", "netio/netio_log.h", "Failed to set a socket for multicast bound to a specific interface"},
    {UDP_LOG_SOCKET_CREATE_EC, "UDP_LOG_SOCKET_CREATE_EC", "UDP", "(UDP_LOG_BASE + 204)", "netio/netio_log.h", "Failed to create a new socket, the sysrc code is the OS return"},
    {UDP_LOG_SOCKET_SETFD_EC, "UDP_LOG_SOCKET_SETFD_EC", "UDP", "(UDP_LOG_BASE + 205)", "netio/netio_log.h", "Failed to set the close-on-exec flag for a socket"},
    {UDP_LOG_SOCKET_SNDBUF_EC, "UDP_LOG_SOCKET_SNDBUF_EC", "UDP", "(UDP_LOG_BASE + 206)", "netio/netio_log.h", "Failed to set the socket send buffer size"},
    {UDP_LOG_SOCKET_TTL_EC, "UDP_LOG_SOCKET_TTL_EC", "UDP", "(UDP_LOG_BASE + 207)", "netio/netio_log.h", "Failed to set multicast TTL for a socket"},
    {UDP_LOG_PACKET_INIT_EC, "UDP_LOG_PACKET_INIT_EC", "UDP", "(UDP_LOG_BASE + 208)", "netio/netio_log.h", "Failed to initialize a receive packet"},
    {UDP_LOG_PACKET_HEAD_EC, "UDP_LOG_PACKET_HEAD_EC", "UDP", "(UDP_LOG_BASE + 209)", "netio/netio_log.h", "Failed to set the head of a receive packet"},
    {UDP_LOG_PACKET_FWD_EC, "UDP_LOG_PACKET_FWD_EC", "UDP", "(UDP_LOG_BASE + 210)", "netio/netio_log.h", "Failed reception upstream for a received packet"},
    {UDP_LOG_NAT_DELETE_EC, "UDP_LOG_NAT_DELETE_EC", "UDP", "(UDP_LOG_BASE + 211)", "netio/netio_log.h", "Failed to delete a database record or index from an internal NAT"},
    {UDP_LOG_FINALIZE_EC, "UDP_LOG_FINALIZE_EC", "UDP", "(UDP_LOG_BASE + 212)", "netio/netio_log.h", "Failed to finalize the parent NETIO interface"},
    {UDP_LOG_SOCKET_REUSE_PORT_EC, "UDP_LOG_SOCKET_REUSE_PORT_EC", "UDP", "(UDP_LOG_BASE + 213)", "netio/netio_log.h", "Failed to set socket to reuse a port or address"},
    {UDP_LOG_SOCKET_BIND_EC, "UDP_LOG_SOCKET_BIND_EC", "UDP", "(UDP_LOG_BASE + 214)", "netio/netio_log.h", "Failed a socket bind"},
    {UDP_LOG_SOCKET_ADDGRP_EC, "UDP_LOG_SOCKET_ADDGRP_EC", "UDP", "(UDP_LOG_BASE + 215)", "netio/netio_log.h", "Failed to add membership to a multicast group for a socket"},
    {UDP_LOG_PORT_ENTRY_EC, "UDP_LOG_PORT_ENTRY_EC", "UDP", "(UDP_LOG_BASE + 216)", "netio/netio_log.h", "Failed to create a bind entry for a receive port"},
    {UDP_LOG_PORT_ALLOC_EC, "UDP_LOG_PORT_ALLOC_EC", "UDP", "(UDP_LOG_BASE + 217)", "netio/netio_log.h", "Failed to allocate memory for a receive buffer of a specific port"},
    {UDP_LOG_SOCKET_RXBUF_EC, "UDP_LOG_SOCKET_RXBUF_EC", "UDP", "(UDP_LOG_BASE + 218)", "netio/netio_log.h", "Failed to set the receive buffer size of a socket"},
    {UDP_LOG_PORT_ADD_EC, "UDP_LOG_PORT_ADD_EC", "UDP", "(UDP_LOG_BASE + 219)", "netio/netio_log.h", "Failed to add a port entry record to a database table"},
    {UDP_LOG_PORT_THREAD_EC, "UDP_LOG_PORT_THREAD_EC", "UDP", "(UDP_LOG_BASE + 220)", "netio/netio_log.h", "Failed to create a receive thread for a receive port"},
    {UDP_LOG_SOCKET_IFLIST_EC, "UDP_LOG_SOCKET_IFLIST_EC", "UDP", "(UDP_LOG_BASE + 221)", "netio/netio_log.h", "Failed to get a list of interface addresses"},
    {UDP_LOG_SOCKET_IFFLAGS_EC, "UDP_LOG_SOCKET_IFFLAGS_EC", "UDP", "(UDP_LOG_BASE + 222)", "netio/netio_log.h", "Failed to get the network interface flags or mask of a socket"},
    {UDP_LOG_SOCKET_CLOSE_EC, "UDP_LOG_SOCKET_CLOSE_EC", "UDP", "(UDP_LOG_BASE + 223)", "netio/netio_log.h", "Failed to close a socket"},
    {UDP_LOG_LOADLIB_EC, "UDP_LOG_LOADLIB_EC", "UDP", "(UDP_LOG_BASE + 224)", "netio/netio_log.h", "Failed to load a dynamic library"},
    {UDP_LOG_GET_BUF_SIZE_EC, "UDP_LOG_GET_BUF_SIZE_EC", "UDP", "(UDP_LOG_BASE + 225)", "netio/netio_log.h", "Failed to get interface buffer size"},
    {UDP_LOG_GET_BUF_ALLOC_EC, "UDP_LOG_GET_BUF_ALLOC_EC", "UDP", "(UDP_LOG_BASE + 226)", "netio/netio_log.h", "Out of memory to allocate interface buffer"},
    {UDP_LOG_GET_IFLIST_EC, "UDP_LOG_GET_IFLIST_EC", "UDP", "(UDP_LOG_BASE + 227)", "netio/netio_log.h", "Failed to get an interface list"},
    {UDP_LOG_GET_NAMEINFO_EC, "UDP_LOG_GET_NAMEINFO_EC", "UDP", "(UDP_LOG_BASE + 228)", "netio/netio_log.h", "Failed getnameinfo()"},
    {UDP_LOG_MULTICAST_ENABLE_EC, "UDP_LOG_MULTICAST_ENABLE_EC", "UDP", "(UDP_LOG_BASE + 229)", "netio/netio_log.h", "Failed to enable multicast loopback"},
    {UDP_LOG_UDP_CREATE_TABLE_EC, "UDP_LOG_UDP_CREATE_TABLE_EC", "UDP", "(UDP_LOG_BASE + 230)", "netio/netio_log.h", "Failed to create a database table for a UDP interface"},
    {UDP_LOG_UDP_CREATE_INDEX_EC, "UDP_LOG_UDP_CREATE_INDEX_EC", "UDP", "(UDP_LOG_BASE + 231)", "netio/netio_log.h", "Failed to create an index for a UDP interface"},
    {UDP_LOG_RECORD_EC, "UDP_LOG_RECORD_EC", "UDP", "(UDP_LOG_BASE + 232)", "netio/netio_log.h", "Failed to create or insert a database record for a UDP interface"},
    {UDP_LOG_PROPERTY_FINALIZE_EC, "UDP_LOG_PROPERTY_FINALIZE_EC", "UDP", "(UDP_LOG_BASE + 233)", "netio/netio_log.h", "Failed to finalize UDP interface factory property"},
    {UDP_LOG_ALLOC_EC, "UDP_LOG_ALLOC_EC", "UDP", "(UDP_LOG_BASE + 234)", "netio/netio_log.h", "Failed to allocate memory for a UDP interface"},
    {UDP_LOG_SEND_PING_EC, "UDP_LOG_SEND_PING_EC", "UDP", "(UDP_LOG_BASE + 235)", "netio/netio_log.h", "Failed sending a ping message, upon adding a route or waking up a"},
    {UDP_LOG_DROPGRP_EC, "UDP_LOG_DROPGRP_EC", "UDP", "(UDP_LOG_BASE + 236)", "netio/netio_log.h", "Failed to drop membership from a multicast group"},
    {UDP_LOG_GET_LENGTH_EC, "UDP_LOG_GET_LENGTH_EC", "UDP", "(UDP_LOG_BASE + 237)", "netio/netio_log.h", "Length of address sequence exceeds its maximum"},
    {UDP_LOG_SET_LENGTH_EC, "UDP_LOG_SET_LENGTH_EC", "UDP", "(UDP_LOG_BASE + 240)", "netio/netio_log.h", "Failed to set the length of an address sequence"},
    {UDP_LOG_WSA_STARTUP_EC, "UDP_LOG_WSA_STARTUP_EC", "UDP", "(UDP_LOG_BASE + 241)", "netio/netio_log.h", "Failed WSAStartup()"},
    {UDP_LOG_WINSOCK_INCOMPATIBLE_EC, "UDP_LOG_WINSOCK_INCOMPATIBLE_EC", "UDP", "(UDP_LOG_BASE + 242)", "netio/netio_log.h", "Incompatible version of Winsock, must not be older than 2.0"},
    {UDP_LOG_INCONSISTENT_MAX_MESSSAGE_SIZE_EC, "UDP_LOG_INCONSISTENT_MAX_MESSSAGE_SIZE_EC", "UDP", "(UDP_LOG_BASE + 243)", "netio/netio_log.h", "Inconsistent max_message_size"},
    {UDP_LOG_INITIALIZE_FAILED_EC, "UDP_LOG_INITIALIZE_FAILED_EC", "UDP", "(UDP_LOG_BASE + 244)", "netio/netio_log.h", "Failed to initialized the loopback interface"},
    {UDP_LOG_PORT_NOT_FOUND_EC, "UDP_LOG_PORT_NOT_FOUND_EC", "UDP", "(UDP_LOG_BASE + 245)", "netio/netio_log.h", "Did not find the specified thread port"},
    {UDP_LOG_CURSOR_ERROR_EC, "UDP_LOG_CURSOR_ERROR_EC", "UDP", "(UDP_LOG_BASE + 246)", "netio/netio_log.h", "An error occurred while iterating over a cursor"},
    {UDP_LOG_SEND_ERROR_EC, "UDP_LOG_SEND_ERROR_EC", "UDP", "(UDP_LOG_BASE + 247)", "netio/netio_log.h", "Failed to send message"},
    {UDP_LOG_MULTICAST_NOT_ENABLED_EC, "UDP_LOG_MULTICAST_NOT_ENABLED_EC", "UDP", "(UDP_LOG_BASE + 248)", "netio/netio_log.h", "Multicast address ignored because multicast supported is not compiled in"},
    {OSAPI_LOG_GET_NEXT_OBJECT_ID_EC, "OSAPI_LOG_GET_NEXT_OBJECT_ID_EC", "OSAPI", "(OSAPI_LOG_BASE + 1)", "osapi/osapi_log.h", "Retrieving the next error code failed"},
    {OSAPI_LOG_SYSTEM_SET_PROPERTY_EC, "OSAPI_LOG_SYSTEM_SET_PROPERTY_EC", "OSAPI", "(OSAPI_LOG_BASE + 2)", "osapi/osapi_log.h", "An error occured while setting the system properties"},
    {OSAPI_LOG_SYSTEM_TIMER_START_EC, "OSAPI_LOG_SYSTEM_TIMER_START_EC", "OSAPI", "(OSAPI_LOG_BASE + 4)", "osapi/osapi_log.h", "An error occured when starting the system timer"},
    {OSAPI_LOG_SYSTEM_TIMER_STOP_EC, "OSAPI_LOG_SYSTEM_TIMER_STOP_EC", "OSAPI", "(OSAPI_LOG_BASE + 5)", "osapi/osapi_log.h", "An error occured when stopping the system timer"},
    {OSAPI_LOG_THREAD_NEW_EC, "OSAPI_LOG_THREAD_NEW_EC", "OSAPI", "(OSAPI_LOG_BASE + 6)", "osapi/osapi_log.h", "An error when allocating the a thread object"},
    {OSAPI_LOG_THREAD_CREATE_EC, "OSAPI_LOG_THREAD_CREATE_EC", "OSAPI", "(OSAPI_LOG_BASE + 7)", "osapi/osapi_log.h", "An error when creating the a thread object"},
    {OSAPI_LOG_THREAD_SEM_EC, "OSAPI_LOG_THREAD_SEM_EC", "OSAPI", "(OSAPI_LOG_BASE + 8)", "osapi/osapi_log.h", "An error when creating thread sync semaphore"},
    {OSAPI_LOG_THREAD_EXEC_CREATE_EC, "OSAPI_LOG_THREAD_EXEC_CREATE_EC", "OSAPI", "(OSAPI_LOG_BASE + 9)", "osapi/osapi_log.h", "Failed to signal that a thread has been created"},
    {OSAPI_LOG_THREAD_EXEC_START_EC, "OSAPI_LOG_THREAD_EXEC_START_EC", "OSAPI", "(OSAPI_LOG_BASE + 10)", "osapi/osapi_log.h", "Failed to signal the start a created thread"},
    {OSAPI_LOG_THREAD_START_EC, "OSAPI_LOG_THREAD_START_EC", "OSAPI", "(OSAPI_LOG_BASE + 11)", "osapi/osapi_log.h", "Failed to start a thread"},
    {OSAPI_LOG_THREAD_DESTROY_EC, "OSAPI_LOG_THREAD_DESTROY_EC", "OSAPI", "(OSAPI_LOG_BASE + 12)", "osapi/osapi_log.h", "Failed to destroy a thread"},
    {OSAPI_LOG_THREAD_DESTROY_NO_START_EC, "OSAPI_LOG_THREAD_DESTROY_NO_START_EC", "OSAPI", "(OSAPI_LOG_BASE + 13)", "osapi/osapi_log.h", "Failed to start an unstarted thread being destroyed"},
    {OSAPI_LOG_THREAD_DESTROY_NO_WAKEUP_EC, "OSAPI_LOG_THREAD_DESTROY_NO_WAKEUP_EC", "OSAPI", "(OSAPI_LOG_BASE + 14)", "osapi/osapi_log.h", "Failed wakeup of a thread being destroyed"},
    {OSAPI_LOG_THREAD_INIT_EC, "OSAPI_LOG_THREAD_INIT_EC", "OSAPI", "(OSAPI_LOG_BASE + 15)", "osapi/osapi_log.h", "Failed initializing a thread"},
    {OSAPI_LOG_THREAD_SCHEDPARAM_EC, "OSAPI_LOG_THREAD_SCHEDPARAM_EC", "OSAPI", "(OSAPI_LOG_BASE + 16)", "osapi/osapi_log.h", "Failed to set scheduling policy of a thread"},
    {OSAPI_LOG_THREAD_GET_POLICY_EC, "OSAPI_LOG_THREAD_GET_POLICY_EC", "OSAPI", "(OSAPI_LOG_BASE + 17)", "osapi/osapi_log.h", "Failed to get the scheduling policy of a thread"},
    {OSAPI_LOG_THREAD_POLICY_DIFFER_EC, "OSAPI_LOG_THREAD_POLICY_DIFFER_EC", "OSAPI", "(OSAPI_LOG_BASE + 18)", "osapi/osapi_log.h", "Mismatch of scheduling policy of a created thread and the application"},
    {OSAPI_LOG_THREAD_PRIORITY_MAP_EC, "OSAPI_LOG_THREAD_PRIORITY_MAP_EC", "OSAPI", "(OSAPI_LOG_BASE + 19)", "osapi/osapi_log.h", "Failed to map to native thread priority values"},
    {OSAPI_LOG_TIMER_DELETE_EC, "OSAPI_LOG_TIMER_DELETE_EC", "OSAPI", "(OSAPI_LOG_BASE + 20)", "osapi/osapi_log.h", "Failed to delete the Timer object"},
    {OSAPI_LOG_TIMER_TICK_EC, "OSAPI_LOG_TIMER_TICK_EC", "OSAPI", "(OSAPI_LOG_BASE + 21)", "osapi/osapi_log.h", ""},
    {OSAPI_LOG_TIMER_TICK_MUTEX_EC, "OSAPI_LOG_TIMER_TICK_MUTEX_EC", "OSAPI", "(OSAPI_LOG_BASE + 22)", "osapi/osapi_log.h", "Failed taking or giving the Timer mutex"},
    {OSAPI_LOG_TIMER_CREATE_TIMEOUT_EC, "OSAPI_LOG_TIMER_CREATE_TIMEOUT_EC", "OSAPI", "(OSAPI_LOG_BASE + 23)", "osapi/osapi_log.h", ""},
    {OSAPI_LOG_TIMER_UPDATE_TIMEOUT_EC, "OSAPI_LOG_TIMER_UPDATE_TIMEOUT_EC", "OSAPI", "(OSAPI_LOG_BASE + 24)", "osapi/osapi_log.h", ""},
    {OSAPI_LOG_TIMER_DELETE_TIMEOUT_EC, "OSAPI_LOG_TIMER_DELETE_TIMEOUT_EC", "OSAPI", "(OSAPI_LOG_BASE + 25)", "osapi/osapi_log.h", ""},
    {OSAPI_LOG_TIMER_GET_USER_DATA_EPOCH_EC, "OSAPI_LOG_TIMER_GET_USER_DATA_EPOCH_EC", "OSAPI", "(OSAPI_LOG_BASE + 27)", "osapi/osapi_log.h", "Failed to return user data for a timeout due to mismatched epochs"},
    {OSAPI_LOG_TIMER_NEW_EC, "OSAPI_LOG_TIMER_NEW_EC", "OSAPI", "(OSAPI_LOG_BASE + 28)", "osapi/osapi_log.h", "Failed to allocate memory for a new Timer"},
    {OSAPI_LOG_TIMER_NEW_ENTRY_EC, "OSAPI_LOG_TIMER_NEW_ENTRY_EC", "OSAPI", "(OSAPI_LOG_BASE + 29)", "osapi/osapi_log.h", "Failed to allocate memory for a new Timer entry"},
    {OSAPI_LOG_TIMER_NEW_WHEEL_EC, "OSAPI_LOG_TIMER_NEW_WHEEL_EC", "OSAPI", "(OSAPI_LOG_BASE + 30)", "osapi/osapi_log.h", "Failed to allocate memory for a new Timer wheel"},
    {OSAPI_LOG_TIMER_NEW_MUTEX_EC, "OSAPI_LOG_TIMER_NEW_MUTEX_EC", "OSAPI", "(OSAPI_LOG_BASE + 31)", "osapi/osapi_log.h", "Failed to create a new Timer mutex"},
    {OSAPI_LOG_TIMER_NEW_START_TIMER_EC, "OSAPI_LOG_TIMER_NEW_START_TIMER_EC", "OSAPI", "(OSAPI_LOG_BASE + 32)", "osapi/osapi_log.h", "Failed to start a new Timer being created"},
    {OSAPI_LOG_TIMER_DELETE_STOP_TIMER_EC, "OSAPI_LOG_TIMER_DELETE_STOP_TIMER_EC", "OSAPI", "(OSAPI_LOG_BASE + 33)", "osapi/osapi_log.h", "Failed to stop a Timer being deleted"},
    {OSAPI_LOG_TIMER_DELETE_MUTEX_EC, "OSAPI_LOG_TIMER_DELETE_MUTEX_EC", "OSAPI", "(OSAPI_LOG_BASE + 34)", "osapi/osapi_log.h", "Failed to delete the Timer mutex"},
    {OSAPI_LOG_TIMER_MUTEX_EC, "OSAPI_LOG_TIMER_MUTEX_EC", "OSAPI", "(OSAPI_LOG_BASE + 35)", "osapi/osapi_log.h", "Failed to take or give a Timer mutex"},
    {OSAPI_LOG_SEMAPHORE_DELETE_EC, "OSAPI_LOG_SEMAPHORE_DELETE_EC", "OSAPI", "(OSAPI_LOG_BASE + 36)", "osapi/osapi_log.h", "Failed to delete a semaphore"},
    {OSAPI_LOG_SEMAPHORE_NEW_EC, "OSAPI_LOG_SEMAPHORE_NEW_EC", "OSAPI", "(OSAPI_LOG_BASE + 37)", "osapi/osapi_log.h", "Failed to create a semaphore"},
    {OSAPI_LOG_SEMAPHORE_NEW_INIT_EC, "OSAPI_LOG_SEMAPHORE_NEW_INIT_EC", "OSAPI", "(OSAPI_LOG_BASE + 38)", "osapi/osapi_log.h", "Failed to initialize a new semaphore"},
    {OSAPI_LOG_SEMAPHORE_GIVE_EC, "OSAPI_LOG_SEMAPHORE_GIVE_EC", "OSAPI", "(OSAPI_LOG_BASE + 39)", "osapi/osapi_log.h", "Failed to give a semaphore"},
    {OSAPI_LOG_SEMAPHORE_TAKE_EC, "OSAPI_LOG_SEMAPHORE_TAKE_EC", "OSAPI", "(OSAPI_LOG_BASE + 40)", "osapi/osapi_log.h", "Failed to take a semaphore"},
    {OSAPI_LOG_MUTEX_DELETE_EC, "OSAPI_LOG_MUTEX_DELETE_EC", "OSAPI", "(OSAPI_LOG_BASE + 41)", "osapi/osapi_log.h", "Failed to delete a mutex"},
    {OSAPI_LOG_MUTEX_NEW_EC, "OSAPI_LOG_MUTEX_NEW_EC", "OSAPI", "(OSAPI_LOG_BASE + 42)", "osapi/osapi_log.h", "Failed to create a mutex"},
    {OSAPI_LOG_MUTEX_TAKE_EC, "OSAPI_LOG_MUTEX_TAKE_EC", "OSAPI", "(OSAPI_LOG_BASE + 43)", "osapi/osapi_log.h", "Failed to take a mutex"},
    {OSAPI_LOG_MUTEX_GIVE_EC, "OSAPI_LOG_MUTEX_GIVE_EC", "OSAPI", "(OSAPI_LOG_BASE + 44)", "osapi/osapi_log.h", "Failed to give a mutex"},
    {OSAPI_LOG_MUTEX_INIT_EC, "OSAPI_LOG_MUTEX_INIT_EC", "OSAPI", "(OSAPI_LOG_BASE + 45)", "osapi/osapi_log.h", "Failed to initialize a mutex"},
    {OSAPI_LOG_HEAP_INTERNAL_ALLOCATE_EC, "OSAPI_LOG_HEAP_INTERNAL_ALLOCATE_EC", "OSAPI", "(OSAPI_LOG_BASE + 46)", "osapi/osapi_log.h", "Failed to allocate a buffer from the heap"},
    {OSAPI_LOG_HEAP_FREE_EC, "OSAPI_LOG_HEAP_FREE_EC", "OSAPI", "(OSAPI_LOG_BASE + 47)", "osapi/osapi_log.h", ""},
    {OSAPI_LOG_SYSTEM_GET_TIME_EC, "OSAPI_LOG_SYSTEM_GET_TIME_EC", "OSAPI", "(OSAPI_LOG_BASE + 48)", "osapi/osapi_log.h", "Failed to get current system time"},
    {OSAPI_LOG_LAST_RECORDED_ERROR_EC, "OSAPI_LOG_LAST_RECORDED_ERROR_EC", "OSAPI", "(OSAPI_LOG_BASE + 49)", "osapi/osapi_log.h", "Return the last recorded error-code for the calling thread"},
    {OSAPI_LOG_SET_THREAD_NAME_EC, "OSAPI_LOG_SET_THREAD_NAME_EC", "OSAPI", "(OSAPI_LOG_BASE + 50)", "osapi/osapi_log.h", "Failed to set the thread name in the OS"},
    {REDA_LOG_BUFFERPOOL_OUT_OF_RESOURCES_EC, "REDA_LOG_BUFFERPOOL_OUT_OF_RESOURCES_EC", "REDA", "(REDA_LOG_BASE + 1)", "reda/reda_log.h", "Not sufficient memory to allocate buffer-pool"},
    {REDA_LOG_BUFFERPOOL_BUFFER_INITIALIZATION_FAILED_EC, "REDA_LOG_BUFFERPOOL_BUFFER_INITIALIZATION_FAILED_EC", "REDA", "(REDA_LOG_BASE + 2)", "reda/reda_log.h", "The buffer initialization method failed"},
    {REDA_LOG_BUFFERPOOL_NOT_EMPTY_EC, "REDA_LOG_BUFFERPOOL_NOT_EMPTY_EC", "REDA", "(REDA_LOG_BASE + 3)", "reda/reda_log.h", "Cannot delete buffer-pool due to buffer(s) not returned to pool"},
    {REDA_LOG_BUFFERPOOL_DOUBLE_FREE_EC, "REDA_LOG_BUFFERPOOL_DOUBLE_FREE_EC", "REDA", "(REDA_LOG_BASE + 4)", "reda/reda_log.h", "A buffer was freed more than once"},
    {REDA_LOG_SEQUENCE_COPY_FAILED_EC, "REDA_LOG_SEQUENCE_COPY_FAILED_EC", "REDA", "(REDA_LOG_BASE + 100)", "reda/reda_log.h", "An error occurred while copying a sequence"},
    {REDA_LOG_SEQUENCE_ALLOC_FAILED_EC, "REDA_LOG_SEQUENCE_ALLOC_FAILED_EC", "REDA", "(REDA_LOG_BASE + 101)", "reda/reda_log.h", "An error occured while allocating space for a sequence"},
    {REDA_LOG_SEQUENCE_SET_MAX_FAILED_EC, "REDA_LOG_SEQUENCE_SET_MAX_FAILED_EC", "REDA", "(REDA_LOG_BASE + 102)", "reda/reda_log.h", "An error occured while setting the maximum sequence size"},
    {REDA_LOG_SEQUENCE_REALLOCATION_EC, "REDA_LOG_SEQUENCE_REALLOCATION_EC", "REDA", "(REDA_LOG_BASE + 103)", "reda/reda_log.h", "An attempt was made to resize an already allocated sequence"},
    {REDA_LOG_SEQUENCE_INVALID_OPERATION_EC, "REDA_LOG_SEQUENCE_INVALID_OPERATION_EC", "REDA", "(REDA_LOG_BASE + 104)", "reda/reda_log.h", "An error occured while operating on two sequences (copy/compare)"},
    {REDA_LOG_SEQUENCE_INVALID_LENGTH_EC, "REDA_LOG_SEQUENCE_INVALID_LENGTH_EC", "REDA", "(REDA_LOG_BASE + 105)", "reda/reda_log.h", "An attempt was made to set an illegal length (length < 0"},
    {REDA_LOG_SEQUENCE_INDEX_OUT_OF_BOUNDS_EC, "REDA_LOG_SEQUENCE_INDEX_OUT_OF_BOUNDS_EC", "REDA", "(REDA_LOG_BASE + 106)", "reda/reda_log.h", "An illegal sequence index was specified (index < 0 or index > length)"},
    {REDA_LOG_STRING_ALLOC_FAILED_EC, "REDA_LOG_STRING_ALLOC_FAILED_EC", "REDA", "(REDA_LOG_BASE + 200)", "reda/reda_log.h", "An error occured while allocating memory for a string"},
    {REDA_LOG_INDEX_FULL_EC, "REDA_LOG_INDEX_FULL_EC", "REDA", "(REDA_LOG_BASE + 300)", "reda/reda_log.h", "An attempt was made to add an element to a full index"},
    {REDA_LOG_INDEX_ENTRY_EXISTS_EC, "REDA_LOG_INDEX_ENTRY_EXISTS_EC", "REDA", "(REDA_LOG_BASE + 301)", "reda/reda_log.h", "An attempt was made to add an existing element to an index"},
    {REDA_LOG_INVALID_LIST_NODE_EC, "REDA_LOG_INVALID_LIST_NODE_EC", "REDA", "(REDA_LOG_BASE + 302)", "reda/reda_log.h", "An attempt was made to add an existing element to an index"},
    {RHSM_LOG_OUTSTANDING_SAMPLE_EC, "RHSM_LOG_OUTSTANDING_SAMPLE_EC", "RHSM", "(RHSM_LOG_BASE + 1)", "rh_sm/rh_sm_log.h", "Failed to delete Reader History due to outstanding, unremoved sample"},
    {RHSM_LOG_NO_PROPERTY_QOS_EC, "RHSM_LOG_NO_PROPERTY_QOS_EC", "RHSM", "(RHSM_LOG_BASE + 2)", "rh_sm/rh_sm_log.h", "Failed to create Reader History due to unspecified property Qos"},
    {RHSM_LOG_KEEP_ALL_HISTORY_NOT_SUPPORTED_EC, "RHSM_LOG_KEEP_ALL_HISTORY_NOT_SUPPORTED_EC", "RHSM", "(RHSM_LOG_BASE + 3)", "rh_sm/rh_sm_log.h", "KEEP_ALL History kind is not supported"},
    {RHSM_LOG_MAX_SAMPLE_TOO_SMALL_EC, "RHSM_LOG_MAX_SAMPLE_TOO_SMALL_EC", "RHSM", "(RHSM_LOG_BASE + 4)", "rh_sm/rh_sm_log.h", "DataReaderQos.resource_limits.max_samples set too small"},
    {RHSM_LOG_TBF_NOT_SUPPORTED_EC, "RHSM_LOG_TBF_NOT_SUPPORTED_EC", "RHSM", "(RHSM_LOG_BASE + 5)", "rh_sm/rh_sm_log.h", "Time-based filtering is not supported"},
    {RHSM_LOG_SAMPLE_INFO_POOL_EC, "RHSM_LOG_SAMPLE_INFO_POOL_EC", "RHSM", "(RHSM_LOG_BASE + 6)", "rh_sm/rh_sm_log.h", "Failed to allocate a buffer pool for sample info"},
    {RHSM_LOG_SAMPLE_POOL_EC, "RHSM_LOG_SAMPLE_POOL_EC", "RHSM", "(RHSM_LOG_BASE + 7)", "rh_sm/rh_sm_log.h", "Failed to allocate a buffer pool for sample pointers"},
    {RHSM_LOG_SAMPLE_PTR_ARRAY_EC, "RHSM_LOG_SAMPLE_PTR_ARRAY_EC", "RHSM", "(RHSM_LOG_BASE + 8)", "rh_sm/rh_sm_log.h", "Failed to get sample buffer."},
    {RHSM_LOG_INFO_ARRAY_EC, "RHSM_LOG_INFO_ARRAY_EC", "RHSM", "(RHSM_LOG_BASE + 9)", "rh_sm/rh_sm_log.h", "Failed to get sample info buffer."},
    {RHSM_LOG_GET_RECEPTION_TIMESTAMP_EC, "RHSM_LOG_GET_RECEPTION_TIMESTAMP_EC", "RHSM", "(RHSM_LOG_BASE + 10)", "rh_sm/rh_sm_log.h", "Failed to get time for reception timestamp."},
    {RHSM_LOG_INVALID_INSTANCE_REPLACEMENT_EC, "RHSM_LOG_INVALID_INSTANCE_REPLACEMENT_EC", "RHSM", "(RHSM_LOG_BASE + 11)", "rh_sm/rh_sm_log.h", "An invalid instance replacement policy was specified."},
    {RHSM_LOG_FAILED_TO_REMOVE_OLDEST_EC, "RHSM_LOG_FAILED_TO_REMOVE_OLDEST_EC", "RHSM", "(RHSM_LOG_BASE + 12)", "rh_sm/rh_sm_log.h", "Failed to remove the oldest sample"},
    {RHSM_LOG_SAMPLE_POOL_EMPTY_EC, "RHSM_LOG_SAMPLE_POOL_EMPTY_EC", "RHSM", "(RHSM_LOG_BASE + 13)", "rh_sm/rh_sm_log.h", "Sample pool empty, may have exceeded"},
    {RHSM_LOG_RW_PRUNE_FAILED_EC, "RHSM_LOG_RW_PRUNE_FAILED_EC", "RHSM", "(RHSM_LOG_BASE + 14)", "rh_sm/rh_sm_log.h", "Failed to prune remote writer entry"},
    {RHSM_LOG_ENTRY_RESERVATION_FAILED_EC, "RHSM_LOG_ENTRY_RESERVATION_FAILED_EC", "RHSM", "(RHSM_LOG_BASE + 15)", "rh_sm/rh_sm_log.h", "Failed to reserve an entry"},
    {RHSM_LOG_RETURN_SAMPLE_EC, "RHSM_LOG_RETURN_SAMPLE_EC", "RHSM", "(RHSM_LOG_BASE + 16)", "rh_sm/rh_sm_log.h", "Failed to return a sample"},
    {RHSM_LOG_HISTORY_UPDATE_EC, "RHSM_LOG_HISTORY_UPDATE_EC", "RHSM", "(RHSM_LOG_BASE + 17)", "rh_sm/rh_sm_log.h", "Failed to update the history queue"},
    {RHSM_LOG_GET_TIME_EC, "RHSM_LOG_GET_TIME_EC", "RHSM", "(RHSM_LOG_BASE + 18)", "rh_sm/rh_sm_log.h", "Failed to get the system time"},
    {RHSM_LOG_OBJECT_ALLOCATE_EC, "RHSM_LOG_OBJECT_ALLOCATE_EC", "RHSM", "(RHSM_LOG_BASE + 19)", "rh_sm/rh_sm_log.h", "Failed to allocate object of the specified kind"},
    {RHSM_LOG_OBJECT_DELETE_EC, "RHSM_LOG_OBJECT_DELETE_EC", "RHSM", "(RHSM_LOG_BASE + 20)", "rh_sm/rh_sm_log.h", "Failed to delete object of the specified kind"},
    {RHSM_LOG_OBJECT_INDEX_EC, "RHSM_LOG_OBJECT_INDEX_EC", "RHSM", "(RHSM_LOG_BASE + 21)", "rh_sm/rh_sm_log.h", "Failed to index an object of the specified kind"},
    {RHSM_LOG_OBJECT_INVALID_EC, "RHSM_LOG_OBJECT_INVALID_EC", "RHSM", "(RHSM_LOG_BASE + 22)", "rh_sm/rh_sm_log.h", "Invalid object specified"},
    {RHSM_LOG_NO_PROPERTY_EC, "RHSM_LOG_NO_PROPERTY_EC", "RHSM", "(RHSM_LOG_BASE + 23)", "rh_sm/rh_sm_log.h", "No property when creating a reader history instance"},
    {RT_LOG_SET_IMMUTABLE_PROPERTY_EC, "RT_LOG_SET_IMMUTABLE_PROPERTY_EC", "RT", "(RT_LOG_BASE + 1)", "rt/rt_log.h", "Failed to set registry property due to registry already being enabled"},
    {RT_LOG_REGISTRY_INIT_FAILURE_EC, "RT_LOG_REGISTRY_INIT_FAILURE_EC", "RT", "(RT_LOG_BASE + 2)", "rt/rt_log.h", "Failed to initialize registry due to failed table creation"},
    {RT_LOG_REGISTRY_FINALIZE_EC, "RT_LOG_REGISTRY_FINALIZE_EC", "RT", "(RT_LOG_BASE + 3)", "rt/rt_log.h", "Failed to finalize registry due to failed table deletion"},
    {RT_LOG_REGISTRY_EXISTS_EC, "RT_LOG_REGISTRY_EXISTS_EC", "RT", "(RT_LOG_BASE + 4)", "rt/rt_log.h", "An attempt was made to register a factory that already existed"},
    {RT_LOG_REGISTRY_REGISTER_EC, "RT_LOG_REGISTRY_REGISTER_EC", "RT", "(RT_LOG_BASE + 5)", "rt/rt_log.h", "Error registering a component factory. May have exceeded"},
    {RT_LOG_REGISTRY_INIT_FACTORY_EC, "RT_LOG_REGISTRY_INIT_FACTORY_EC", "RT", "(RT_LOG_BASE + 7)", "rt/rt_log.h", "A registered factory failed to initialize"},
    {RT_LOG_REGISTRY_NAME_TOO_LONG_EC, "RT_LOG_REGISTRY_NAME_TOO_LONG_EC", "RT", "(RT_LOG_BASE + 8)", "rt/rt_log.h", "Factory name longer than maximum length of 8"},
    {RT_LOG_REGISTRY_INCONSISTENT_CID_EC, "RT_LOG_REGISTRY_INCONSISTENT_CID_EC", "RT", "(RT_LOG_BASE + 9)", "rt/rt_log.h", "Factory name exists, but the class ID is not of the requested type"},
    {RT_LOG_REGISTRY_NOT_INITIALIZED_EC, "RT_LOG_REGISTRY_NOT_INITIALIZED_EC", "RT", "(RT_LOG_BASE + 10)", "rt/rt_log.h", "An attempt was made to operate on an uninitialized registry"},
    {RTPS_LOG_INITIALIZE_INTERFACE_EC, "RTPS_LOG_INITIALIZE_INTERFACE_EC", "RTPS", "(RTPS_LOG_BASE + 1)", "rtps/rtps_log.h", "Failed to initialize an RTPS interface"},
    {RTPS_LOG_ALLOCATE_EC, "RTPS_LOG_ALLOCATE_EC", "RTPS", "(RTPS_LOG_BASE + 2)", "rtps/rtps_log.h", "Failed to allocate heap memory for internal resources"},
    {RTPS_LOG_CREATE_ROUTE_TABLE_EC, "RTPS_LOG_CREATE_ROUTE_TABLE_EC", "RTPS", "(RTPS_LOG_BASE + 3)", "rtps/rtps_log.h", "Failed to create a database table for storing RTPS route info"},
    {RTPS_LOG_DB_CREATE_ROUTE_PEER_INDEX_EC, "RTPS_LOG_DB_CREATE_ROUTE_PEER_INDEX_EC", "RTPS", "(RTPS_LOG_BASE + 4)", "rtps/rtps_log.h", "Failed to create database index for route-peer info"},
    {RTPS_LOG_DB_CREATE_ROUTE_XPORT_INDEX_EC, "RTPS_LOG_DB_CREATE_ROUTE_XPORT_INDEX_EC", "RTPS", "(RTPS_LOG_BASE + 5)", "rtps/rtps_log.h", "Failed to create database index for route-transport info"},
    {RTPS_LOG_DB_CREATE_BIND_PEER_INDEX_EC, "RTPS_LOG_DB_CREATE_BIND_PEER_INDEX_EC", "RTPS", "(RTPS_LOG_BASE + 6)", "rtps/rtps_log.h", "Failed to create database index for bind-peer info"},
    {RTPS_LOG_INDEX_ADD_ENTRY_EC, "RTPS_LOG_INDEX_ADD_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 8)", "rtps/rtps_log.h", "Failed to add an entry to a database index"},
    {RTPS_LOG_DB_SELECT_ALL_EC, "RTPS_LOG_DB_SELECT_ALL_EC", "RTPS", "(RTPS_LOG_BASE + 9)", "rtps/rtps_log.h", "Failed to select all entries of a database table"},
    {RTPS_LOG_DB_SELECT_MATCH_EC, "RTPS_LOG_DB_SELECT_MATCH_EC", "RTPS", "(RTPS_LOG_BASE + 10)", "rtps/rtps_log.h", "Matching entry not found in a database table."},
    {RTPS_LOG_DB_SELECT_RANGE_EC, "RTPS_LOG_DB_SELECT_RANGE_EC", "RTPS", "(RTPS_LOG_BASE + 11)", "rtps/rtps_log.h", "No matching entries found in a database table."},
    {RTPS_LOG_DB_CREATE_ROUTE_ENTRY_EC, "RTPS_LOG_DB_CREATE_ROUTE_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 12)", "rtps/rtps_log.h", "Failed to create database entry for route."},
    {RTPS_LOG_DB_INSERT_ROUTE_ENTRY_EC, "RTPS_LOG_DB_INSERT_ROUTE_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 13)", "rtps/rtps_log.h", "Failed to insert entry into route table"},
    {RTPS_LOG_DB_REMOVE_ROUTE_ENTRY_EC, "RTPS_LOG_DB_REMOVE_ROUTE_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 14)", "rtps/rtps_log.h", "Failed to remove entry from route table"},
    {RTPS_LOG_DB_DELETE_ROUTE_ENTRY_EC, "RTPS_LOG_DB_DELETE_ROUTE_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 15)", "rtps/rtps_log.h", "Failed to delete entry from route table"},
    {RTPS_LOG_DB_CREATE_BIND_ENTRY_EC, "RTPS_LOG_DB_CREATE_BIND_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 16)", "rtps/rtps_log.h", "Failed to create database entry for bind."},
    {RTPS_LOG_DB_INSERT_BIND_ENTRY_EC, "RTPS_LOG_DB_INSERT_BIND_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 17)", "rtps/rtps_log.h", "Failed to insert an entry into the bind table."},
    {RTPS_LOG_DB_REMOVE_BIND_ENTRY_EC, "RTPS_LOG_DB_REMOVE_BIND_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 18)", "rtps/rtps_log.h", "Failed to remove an entry from the bind table."},
    {RTPS_LOG_DB_REMOVE_EXTERNAL_BIND_ENTRY_EC, "RTPS_LOG_DB_REMOVE_EXTERNAL_BIND_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 19)", "rtps/rtps_log.h", "Failed to remove an entry from the external bind table."},
    {RTPS_LOG_DB_DELETE_EXTERNAL_BIND_ENTRY_EC, "RTPS_LOG_DB_DELETE_EXTERNAL_BIND_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 20)", "rtps/rtps_log.h", "Failed to delete entry from external bind table"},
    {RTPS_LOG_SEND_EC, "RTPS_LOG_SEND_EC", "RTPS", "(RTPS_LOG_BASE + 21)", "rtps/rtps_log.h", "Failed to send a packet due to a lower module failing to send the"},
    {RTPS_LOG_RECEIVE_EC, "RTPS_LOG_RECEIVE_EC", "RTPS", "(RTPS_LOG_BASE + 22)", "rtps/rtps_log.h", "Failed to receive a packet due to a higher module failing to receive"},
    {RTPS_LOG_ROUTE_PACKET_EC, "RTPS_LOG_ROUTE_PACKET_EC", "RTPS", "(RTPS_LOG_BASE + 23)", "rtps/rtps_log.h", "Failed to send a packet, when routing to a lower module or peer"},
    {RTPS_LOG_FORWARD_UPSTREAM_EC, "RTPS_LOG_FORWARD_UPSTREAM_EC", "RTPS", "(RTPS_LOG_BASE + 24)", "rtps/rtps_log.h", "Failed to receive a packet, when forwarding to a higher upstream module"},
    {RTPS_LOG_BAD_PARAMETER_EC, "RTPS_LOG_BAD_PARAMETER_EC", "RTPS", "(RTPS_LOG_BASE + 25)", "rtps/rtps_log.h", "Bad parameter to an RTPS interface function"},
    {RTPS_LOG_NOT_ENABLED_EC, "RTPS_LOG_NOT_ENABLED_EC", "RTPS", "(RTPS_LOG_BASE + 26)", "rtps/rtps_log.h", "Failed because interface is not enabled"},
    {RTPS_LOG_READER_UNSUPPORTED_EC, "RTPS_LOG_READER_UNSUPPORTED_EC", "RTPS", "(RTPS_LOG_BASE + 27)", "rtps/rtps_log.h", "RTPS reader does not support send"},
    {RTPS_LOG_INTERFACE_MISMATCH_EC, "RTPS_LOG_INTERFACE_MISMATCH_EC", "RTPS", "(RTPS_LOG_BASE + 28)", "rtps/rtps_log.h", "Upstream interface does not match source or destination of packet"},
    {RTPS_LOG_FULL_SEND_WINDOW_EC, "RTPS_LOG_FULL_SEND_WINDOW_EC", "RTPS", "(RTPS_LOG_BASE + 29)", "rtps/rtps_log.h", "Failed to send due to reaching maximum send window size"},
    {RTPS_LOG_NETIO_PACKET_SET_TAIL_EC, "RTPS_LOG_NETIO_PACKET_SET_TAIL_EC", "RTPS", "(RTPS_LOG_BASE + 31)", "rtps/rtps_log.h", "Failed to set tail of packet to send"},
    {RTPS_LOG_FUNC_UNSUPPORTED_EC, "RTPS_LOG_FUNC_UNSUPPORTED_EC", "RTPS", "(RTPS_LOG_BASE + 32)", "rtps/rtps_log.h", "RTPS interface does not support this function"},
    {RTPS_LOG_EXCEEDED_LIMIT_TRANSPORTS_EC, "RTPS_LOG_EXCEEDED_LIMIT_TRANSPORTS_EC", "RTPS", "(RTPS_LOG_BASE + 33)", "rtps/rtps_log.h", "Out of transport entries."},
    {RTPS_LOG_EXCEEDED_LIMIT_PEERS_EC, "RTPS_LOG_EXCEEDED_LIMIT_PEERS_EC", "RTPS", "(RTPS_LOG_BASE + 34)", "rtps/rtps_log.h", "Out of peer entries."},
    {RTPS_LOG_ASSERT_PEER_EC, "RTPS_LOG_ASSERT_PEER_EC", "RTPS", "(RTPS_LOG_BASE + 35)", "rtps/rtps_log.h", "Failed to assert a remote writer or reader"},
    {RTPS_LOG_ASSERT_TRANSPORT_EC, "RTPS_LOG_ASSERT_TRANSPORT_EC", "RTPS", "(RTPS_LOG_BASE + 36)", "rtps/rtps_log.h", "Failed to assert a downstream transport"},
    {RTPS_LOG_FIND_EXTERNAL_INTERFACE_EC, "RTPS_LOG_FIND_EXTERNAL_INTERFACE_EC", "RTPS", "(RTPS_LOG_BASE + 37)", "rtps/rtps_log.h", "Failed to lookup an external interface"},
    {RTPS_LOG_NONEXISTENT_ROUTE_EC, "RTPS_LOG_NONEXISTENT_ROUTE_EC", "RTPS", "(RTPS_LOG_BASE + 38)", "rtps/rtps_log.h", "Failed to delete a nonexistent route"},
    {RTPS_LOG_NONEXISTENT_BIND_EC, "RTPS_LOG_NONEXISTENT_BIND_EC", "RTPS", "(RTPS_LOG_BASE + 39)", "rtps/rtps_log.h", "Failed to remove a nonexistent bind entry"},
    {RTPS_LOG_NONEXISTENT_EXTERNAL_BIND_EC, "RTPS_LOG_NONEXISTENT_EXTERNAL_BIND_EC", "RTPS", "(RTPS_LOG_BASE + 40)", "rtps/rtps_log.h", "Failed to remove a nonexistent external bind entry"},
    {RTPS_LOG_STALE_ACK_EPOCH__EC, "RTPS_LOG_STALE_ACK_EPOCH__EC", "RTPS", "(RTPS_LOG_BASE + 41)", "rtps/rtps_log.h", "Dropped an ACKNACK submessage with an old epoch"},
    {RTPS_LOG_STALE_HB_EPOCH_EC, "RTPS_LOG_STALE_HB_EPOCH_EC", "RTPS", "(RTPS_LOG_BASE + 42)", "rtps/rtps_log.h", "Dropped a HEARTBEAT submessage with an old epoch"},
    {RTPS_LOG_ACK_EC, "RTPS_LOG_ACK_EC", "RTPS", "(RTPS_LOG_BASE + 43)", "rtps/rtps_log.h", "Failed an acknack() upstream"},
    {RTPS_LOG_REQUEST_EC, "RTPS_LOG_REQUEST_EC", "RTPS", "(RTPS_LOG_BASE + 45)", "rtps/rtps_log.h", "Failed a request() upstream"},
    {RTPS_LOG_RETURN_LOAN_EC, "RTPS_LOG_RETURN_LOAN_EC", "RTPS", "(RTPS_LOG_BASE + 46)", "rtps/rtps_log.h", "Failed a return_loan() upstream"},
    {RTPS_LOG_NETIO_PACKET_SET_HEAD_EC, "RTPS_LOG_NETIO_PACKET_SET_HEAD_EC", "RTPS", "(RTPS_LOG_BASE + 47)", "rtps/rtps_log.h", "Failed to set the head of a packet"},
    {RTPS_LOG_SEND_HEARTBEAT_EC, "RTPS_LOG_SEND_HEARTBEAT_EC", "RTPS", "(RTPS_LOG_BASE + 48)", "rtps/rtps_log.h", "Failed to send a HEARTBEAT submessage"},
    {RTPS_LOG_SHIFT_BITMAP_EC, "RTPS_LOG_SHIFT_BITMAP_EC", "RTPS", "(RTPS_LOG_BASE + 49)", "rtps/rtps_log.h", "Failed to shift a bitmap"},
    {RTPS_LOG_FULLY_ACKED_READER_EC, "RTPS_LOG_FULLY_ACKED_READER_EC", "RTPS", "(RTPS_LOG_BASE + 50)", "rtps/rtps_log.h", "A Reader is fully acknowledged and does not need to respond to a"},
    {RTPS_LOG_DATA_OUT_OF_RANGE_EC, "RTPS_LOG_DATA_OUT_OF_RANGE_EC", "RTPS", "(RTPS_LOG_BASE + 51)", "rtps/rtps_log.h", "Dropping a DATA submessage whose sequence number is outside of"},
    {RTPS_LOG_DATA_ALREADY_RECEIVED_EC, "RTPS_LOG_DATA_ALREADY_RECEIVED_EC", "RTPS", "(RTPS_LOG_BASE + 52)", "rtps/rtps_log.h", "Dropping a DATA submessage whose sequence number was previously"},
    {RTPS_LOG_INTERFACE_NOT_ENABLED_EC, "RTPS_LOG_INTERFACE_NOT_ENABLED_EC", "RTPS", "(RTPS_LOG_BASE + 53)", "rtps/rtps_log.h", "Failed to receive a message because interface is not enabled"},
    {RTPS_LOG_INVALID_PACKET_EC, "RTPS_LOG_INVALID_PACKET_EC", "RTPS", "(RTPS_LOG_BASE + 54)", "rtps/rtps_log.h", "Dropped a message with an invalid packet header"},
    {RTPS_LOG_UNSUPPORTED_INTERFACE_EC, "RTPS_LOG_UNSUPPORTED_INTERFACE_EC", "RTPS", "(RTPS_LOG_BASE + 55)", "rtps/rtps_log.h", "Received a message on an unsupported interface"},
    {RTPS_LOG_UNKNOWN_SUBMESSAGE_EC, "RTPS_LOG_UNKNOWN_SUBMESSAGE_EC", "RTPS", "(RTPS_LOG_BASE + 56)", "rtps/rtps_log.h", "Received a submessage with an unknown ID"},
    {RTPS_LOG_PROCESS_ACKNACK_EC, "RTPS_LOG_PROCESS_ACKNACK_EC", "RTPS", "(RTPS_LOG_BASE + 57)", "rtps/rtps_log.h", "Failed to process received ACKNACK submessage"},
    {RTPS_LOG_PROCESS_DATA_EC, "RTPS_LOG_PROCESS_DATA_EC", "RTPS", "(RTPS_LOG_BASE + 58)", "rtps/rtps_log.h", "Failed to process received DATA submessage"},
    {RTPS_LOG_PROCESS_GAP_EC, "RTPS_LOG_PROCESS_GAP_EC", "RTPS", "(RTPS_LOG_BASE + 59)", "rtps/rtps_log.h", "Failed to process received GAP submessage"},
    {RTPS_LOG_PROCESS_HEARTBEAT_EC, "RTPS_LOG_PROCESS_HEARTBEAT_EC", "RTPS", "(RTPS_LOG_BASE + 60)", "rtps/rtps_log.h", "Failed to process received HEARTBEAT submessage"},
    {RTPS_LOG_CREATE_HB_EVENT_EC, "RTPS_LOG_CREATE_HB_EVENT_EC", "RTPS", "(RTPS_LOG_BASE + 61)", "rtps/rtps_log.h", "Failed to create periodic HEARTBEAT event"},
    {RTPS_LOG_CREATE_EVENT_TIMER_EC, "RTPS_LOG_CREATE_EVENT_TIMER_EC", "RTPS", "(RTPS_LOG_BASE + 62)", "rtps/rtps_log.h", "Failed to create periodic HEARTBEAT event timer"},
    {RTPS_LOG_SEQ_NUM_OUT_OF_RANGE_EC, "RTPS_LOG_SEQ_NUM_OUT_OF_RANGE_EC", "RTPS", "(RTPS_LOG_BASE + 63)", "rtps/rtps_log.h", "Failed to set bitmap bit due to out-of-range sequence number"},
    {RTPS_LOG_FIRST_SN_GREATER_LAST_SN_EC, "RTPS_LOG_FIRST_SN_GREATER_LAST_SN_EC", "RTPS", "(RTPS_LOG_BASE + 65)", "rtps/rtps_log.h", "Invalid range of sequence numbers to fill in bitmap"},
    {RTPS_LOG_BITCOUNT_OUT_OF_BOUNDS_EC, "RTPS_LOG_BITCOUNT_OUT_OF_BOUNDS_EC", "RTPS", "(RTPS_LOG_BASE + 66)", "rtps/rtps_log.h", "Deserialized an invalid out-of-bounds bitcount for a bitmap"},
    {RTPS_LOG_SHIFT_SN_OUT_OF_RANGE_EC, "RTPS_LOG_SHIFT_SN_OUT_OF_RANGE_EC", "RTPS", "(RTPS_LOG_BASE + 67)", "rtps/rtps_log.h", "Failed to shift bitmap due to invalid starting sequence number"},
    {RTPS_LOG_SERIALIZE_HOST_ID_EC, "RTPS_LOG_SERIALIZE_HOST_ID_EC", "RTPS", "(RTPS_LOG_BASE + 68)", "rtps/rtps_log.h", "Failed to serialize host ID of GUID"},
    {RTPS_LOG_SERIALIZE_APP_ID_EC, "RTPS_LOG_SERIALIZE_APP_ID_EC", "RTPS", "(RTPS_LOG_BASE + 69)", "rtps/rtps_log.h", "Failed to serialize app ID of GUID"},
    {RTPS_LOG_SERIALIZE_INSTANCE_ID_EC, "RTPS_LOG_SERIALIZE_INSTANCE_ID_EC", "RTPS", "(RTPS_LOG_BASE + 70)", "rtps/rtps_log.h", "Failed to serialized instance ID of GUID"},
    {RTPS_LOG_SERIALIZE_OBJECT_ID_EC, "RTPS_LOG_SERIALIZE_OBJECT_ID_EC", "RTPS", "(RTPS_LOG_BASE + 71)", "rtps/rtps_log.h", "Failed to serialize object ID of GUID"},
    {RTPS_LOG_DESERIALIZE_HOST_ID_EC, "RTPS_LOG_DESERIALIZE_HOST_ID_EC", "RTPS", "(RTPS_LOG_BASE + 72)", "rtps/rtps_log.h", "Failed to deserialize host ID of GUID"},
    {RTPS_LOG_DESERIALIZE_APP_ID_EC, "RTPS_LOG_DESERIALIZE_APP_ID_EC", "RTPS", "(RTPS_LOG_BASE + 73)", "rtps/rtps_log.h", "Faild to deserialize app ID of GUID"},
    {RTPS_LOG_DESERIALIZE_INSTANCE_ID_EC, "RTPS_LOG_DESERIALIZE_INSTANCE_ID_EC", "RTPS", "(RTPS_LOG_BASE + 74)", "rtps/rtps_log.h", "Failed to deserialize instance ID of GUID"},
    {RTPS_LOG_DESERIALIZE_OBJECT_ID_EC, "RTPS_LOG_DESERIALIZE_OBJECT_ID_EC", "RTPS", "(RTPS_LOG_BASE + 75)", "rtps/rtps_log.h", "Failed to deserialize object ID of GUID"},
    {RTPS_LOG_DB_CREATE_EXT_BIND_ENTRY_EC, "RTPS_LOG_DB_CREATE_EXT_BIND_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 76)", "rtps/rtps_log.h", "Failed to create database entry for external bind table."},
    {RTPS_LOG_BITMAP_SET_BIT_EC, "RTPS_LOG_BITMAP_SET_BIT_EC", "RTPS", "(RTPS_LOG_BASE + 77)", "rtps/rtps_log.h", "Failed to set bit in bitmap"},
    {RTPS_LOG_UNSUPPORTED_INFO_REPLY_EC, "RTPS_LOG_UNSUPPORTED_INFO_REPLY_EC", "RTPS", "(RTPS_LOG_BASE + 78)", "rtps/rtps_log.h", "Received and dropped currently unsupported INFO_REPLY submessage"},
    {RTPS_LOG_UNSUPPORTED_INFO_SRC_EC, "RTPS_LOG_UNSUPPORTED_INFO_SRC_EC", "RTPS", "(RTPS_LOG_BASE + 80)", "rtps/rtps_log.h", "Received and dropped currently unsupported INFO_SRC submessage"},
    {RTPS_LOG_DELETE_INDEX_EC, "RTPS_LOG_DELETE_INDEX_EC", "RTPS", "(RTPS_LOG_BASE + 81)", "rtps/rtps_log.h", "Failed to delete index of a database table"},
    {RTPS_LOG_DELETE_TABLE_EC, "RTPS_LOG_DELETE_TABLE_EC", "RTPS", "(RTPS_LOG_BASE + 82)", "rtps/rtps_log.h", "Failed to delete a database table"},
    {RTPS_LOG_DB_LOCK_EC, "RTPS_LOG_DB_LOCK_EC", "RTPS", "(RTPS_LOG_BASE + 83)", "rtps/rtps_log.h", "Failed to take database lock"},
    {RTPS_LOG_DB_UNLOCK_EC, "RTPS_LOG_DB_UNLOCK_EC", "RTPS", "(RTPS_LOG_BASE + 84)", "rtps/rtps_log.h", "Failed to give database lock"},
    {RTPS_LOG_CREATE_BIND_TABLE_EC, "RTPS_LOG_CREATE_BIND_TABLE_EC", "RTPS", "(RTPS_LOG_BASE + 85)", "rtps/rtps_log.h", "Failed to create a database table for storing RTPS bind info"},
    {RTPS_LOG_STATUS_CHANGE_EC, "RTPS_LOG_STATUS_CHANGE_EC", "RTPS", "(RTPS_LOG_BASE + 86)", "rtps/rtps_log.h", "Failed to update status for reliable reader activity changed."},
    {RTPS_LOG_SET_GAP_EC, "RTPS_LOG_SET_GAP_EC", "RTPS", "(RTPS_LOG_BASE + 87)", "rtps/rtps_log.h", "Failed to update status for reliable reader activity changed."},
    {RTPS_LOG_WINDOW_POOL_ALLOC_EC, "RTPS_LOG_WINDOW_POOL_ALLOC_EC", "RTPS", "(RTPS_LOG_BASE + 88)", "rtps/rtps_log.h", "Out of memory to allocate send window pool"},
    {RTPS_LOG_GET_WINDOW_BUFFER_EC, "RTPS_LOG_GET_WINDOW_BUFFER_EC", "RTPS", "(RTPS_LOG_BASE + 89)", "rtps/rtps_log.h", "Failed to get buffer from send window pool"},
    {RTPS_LOG_INSERT_WINDOW_FULL_EC, "RTPS_LOG_INSERT_WINDOW_FULL_EC", "RTPS", "(RTPS_LOG_BASE + 90)", "rtps/rtps_log.h", "Cannot insert sample into full window"},
    {RTPS_LOG_WINDOW_INSERT_EC, "RTPS_LOG_WINDOW_INSERT_EC", "RTPS", "(RTPS_LOG_BASE + 91)", "rtps/rtps_log.h", "Failed to insert sample into send window"},
    {RTPS_LOG_TIMER_DELETE_TIMEOUT_EC, "RTPS_LOG_TIMER_DELETE_TIMEOUT_EC", "RTPS", "(RTPS_LOG_BASE + 92)", "rtps/rtps_log.h", "Failed to delete a timeout event"},
    {RTPS_LOG_BUFFERPOOL_DELETE_EC, "RTPS_LOG_BUFFERPOOL_DELETE_EC", "RTPS", "(RTPS_LOG_BASE + 93)", "rtps/rtps_log.h", "Failed to delete a buffer pool"},
    {RTPS_LOG_DIRECT_SEND_EC, "RTPS_LOG_DIRECT_SEND_EC", "RTPS", "(RTPS_LOG_BASE + 94)", "rtps/rtps_log.h", "Failed to send a message to a specific peer"},
    {RTPS_LOG_PACKET_INITIALIZE_EC, "RTPS_LOG_PACKET_INITIALIZE_EC", "RTPS", "(RTPS_LOG_BASE + 95)", "rtps/rtps_log.h", "RTPS writer failed to initialize a packet"},
    {RTPS_LOG_WRITER_REQUEST_SENT_HISTORY_EC, "RTPS_LOG_WRITER_REQUEST_SENT_HISTORY_EC", "RTPS", "(RTPS_LOG_BASE + 96)", "rtps/rtps_log.h", "RTPS reliable writer failed to request and resend history"},
    {RTPS_LOG_BITMAP_SHIFT_EC, "RTPS_LOG_BITMAP_SHIFT_EC", "RTPS", "(RTPS_LOG_BASE + 97)", "rtps/rtps_log.h", "Failed to shift bitmap to new lead sequence number"},
    {RTPS_LOG_WINDOW_ADVANCE_EC, "RTPS_LOG_WINDOW_ADVANCE_EC", "RTPS", "(RTPS_LOG_BASE + 98)", "rtps/rtps_log.h", "Send window of a remote reader failed to advance"},
    {RTPS_LOG_WINDOW_ADVANCE_UNACKED_EC, "RTPS_LOG_WINDOW_ADVANCE_UNACKED_EC", "RTPS", "(RTPS_LOG_BASE + 99)", "rtps/rtps_log.h", "Failed when advancing window ahead of unacknowledged sequence number"},
    {RTPS_LOG_LOOKUP_PEER_EC, "RTPS_LOG_LOOKUP_PEER_EC", "RTPS", "(RTPS_LOG_BASE + 100)", "rtps/rtps_log.h", "Failed to find peer that should exist"},
    {RTPS_LOG_READER_SEND_ACKNACK_EC, "RTPS_LOG_READER_SEND_ACKNACK_EC", "RTPS", "(RTPS_LOG_BASE + 101)", "rtps/rtps_log.h", "RTPS reader failed to send an ACKNACK message"},
    {RTPS_LOG_FINALIZE_INTERFACE_EC, "RTPS_LOG_FINALIZE_INTERFACE_EC", "RTPS", "(RTPS_LOG_BASE + 102)", "rtps/rtps_log.h", "Failed to finalize an RTPS interface"},
    {RTPS_LOG_INDEXER_REMOVE_ENTRY_EC, "RTPS_LOG_INDEXER_REMOVE_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 103)", "rtps/rtps_log.h", "Failed to remove index entry for external interface upon deleting"},
    {RTPS_LOG_LOOKUP_EXT_BIND_ENTRY_EC, "RTPS_LOG_LOOKUP_EXT_BIND_ENTRY_EC", "RTPS", "(RTPS_LOG_BASE + 104)", "rtps/rtps_log.h", "Failed when looking up external bind entry from database"},
    {RTPS_LOG_SEQ_INIT_EC, "RTPS_LOG_SEQ_INIT_EC", "RTPS", "(RTPS_LOG_BASE + 105)", "rtps/rtps_log.h", "Failed to initialize a local sequence"},
    {RTPS_LOG_SEQ_MAX_EC, "RTPS_LOG_SEQ_MAX_EC", "RTPS", "(RTPS_LOG_BASE + 106)", "rtps/rtps_log.h", "Failed to set maximum of a local sequence"},
    {RTPS_LOG_SEQ_LEN_EC, "RTPS_LOG_SEQ_LEN_EC", "RTPS", "(RTPS_LOG_BASE + 107)", "rtps/rtps_log.h", "Failed to set length of a local sequence"},
    {RTPS_LOG_INTF_MODE_UNDEF_EC, "RTPS_LOG_INTF_MODE_UNDEF_EC", "RTPS", "(RTPS_LOG_BASE + 108)", "rtps/rtps_log.h", "Initializing an RTPS interface with undefined mode"},
    {RTPS_LOG_DELETE_BUFFER_POOL_EC, "RTPS_LOG_DELETE_BUFFER_POOL_EC", "RTPS", "(RTPS_LOG_BASE + 109)", "rtps/rtps_log.h", "Failed to delete buffer pool"},
    {RTPS_LOG_CREATE_BUFFER_POOL_EC, "RTPS_LOG_CREATE_BUFFER_POOL_EC", "RTPS", "(RTPS_LOG_BASE + 110)", "rtps/rtps_log.h", "Failed to create buffer pool"},
    {RTPS_LOG_CREATE_PEERS_INDEX_EC, "RTPS_LOG_CREATE_PEERS_INDEX_EC", "RTPS", "(RTPS_LOG_BASE + 111)", "rtps/rtps_log.h", "Failed to create index of peers"},
    {RTPS_LOG_DELETE_INDEXER_EC, "RTPS_LOG_DELETE_INDEXER_EC", "RTPS", "(RTPS_LOG_BASE + 112)", "rtps/rtps_log.h", "Failed to delete indexer"},
    {RTPS_LOG_GET_PEER_BUFFER_EC, "RTPS_LOG_GET_PEER_BUFFER_EC", "RTPS", "(RTPS_LOG_BASE + 113)", "rtps/rtps_log.h", "Failed to get buffer from peer buffer pool"},
    {RTPS_LOG_DB_CREATE_DIRECT_INDEX_EC, "RTPS_LOG_DB_CREATE_DIRECT_INDEX_EC", "RTPS", "(RTPS_LOG_BASE + 114)", "rtps/rtps_log.h", "Failed to create database index for direct sends"},
    {RTPS_LOG_DB_CREATE_GROUP_INDEX_EC, "RTPS_LOG_DB_CREATE_GROUP_INDEX_EC", "RTPS", "(RTPS_LOG_BASE + 115)", "rtps/rtps_log.h", "Failed to create database index for group sends"},
    {WHSM_LOG_KEEP_ALL_HISTORY_NOT_SUPPORTED_EC, "WHSM_LOG_KEEP_ALL_HISTORY_NOT_SUPPORTED_EC", "WHSM", "(WHSM_LOG_BASE + 1)", "wh_sm/wh_sm_log.h", "KEEP_ALL History kind is not supported"},
    {WHSM_LOG_UNLIMITED_HISTORY_NOT_SUPPORTED_EC, "WHSM_LOG_UNLIMITED_HISTORY_NOT_SUPPORTED_EC", "WHSM", "(WHSM_LOG_BASE + 2)", "wh_sm/wh_sm_log.h", "Unlimited length resource limits unsupported"},
    {WHSM_LOG_MAX_SAMPLES_TOO_SMALL_EC, "WHSM_LOG_MAX_SAMPLES_TOO_SMALL_EC", "WHSM", "(WHSM_LOG_BASE + 3)", "wh_sm/wh_sm_log.h", "DataWriterQos.resource_limits.max_samples set too small"},
    {WHSM_LOG_OBJECT_ALLOCATE_EC, "WHSM_LOG_OBJECT_ALLOCATE_EC", "WHSM", "(WHSM_LOG_BASE + 4)", "wh_sm/wh_sm_log.h", "Failed to allocate object of the specified kind"},
    {WHSM_LOG_OBJECT_DELETE_EC, "WHSM_LOG_OBJECT_DELETE_EC", "WHSM", "(WHSM_LOG_BASE + 5)", "wh_sm/wh_sm_log.h", "Failed to delete object of the specified kind"},
    {WHSM_LOG_OBJECT_INDEX_EC, "WHSM_LOG_OBJECT_INDEX_EC", "WHSM", "(WHSM_LOG_BASE + 6)", "wh_sm/wh_sm_log.h", "Failed to index an object of the specified kind"},
    {WHSM_LOG_NO_PROPERTY_EC, "WHSM_LOG_NO_PROPERTY_EC", "WHSM", "(WHSM_LOG_BASE + 7)", "wh_sm/wh_sm_log.h", "No property when creating a writer history instance"}
};