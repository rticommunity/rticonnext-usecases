<?xml version="1.0"?>
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="c:\program files\rti\5.0.0\RTI Recording Service 5.0.0\resource\schema\rti_replay.xsd">

<!-- 
(c) 2005-2013 Copyright, Real-Time Innovations, Inc.  All rights reserved.    	                             
RTI grants Licensee a license to use, modify, compile, and create derivative works 
of the Software.  Licensee has the right to distribute object form only for use with RTI 
products.  The Software is provided “as is”, with no warranty of any type, including 
any warranty for fitness for any purpose. RTI is under no obligation to maintain or 
support the Software.  RTI shall not be liable for any incidental or consequential 
damages arising out of the use or inability to use the software.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Description
XML configuration for replaying all network data, using high-throughput settings

-->

    <replay_service name="flightdatareplay">
        <annotation>
            <documentation>Replay flight data</documentation>
        </annotation>

        <time_control>
            <rate>10</rate>      <!-- Optional Rate Multiplier -->
            <start_mode>AUTO</start_mode>
            <start_offset>
                <sec>0</sec>
            </start_offset>
        </time_control>

        <!-- Source Database, Required -->
        <replay_database name="flight_data">
            <filename>flight_data.dat_0_0</filename>
            <readonly>false</readonly>

            <!-- Configuration for Output Participant, Optional --> 
            <participant>
                <domain_id>0</domain_id>
                <participant_qos>
                    
                    <!-- Optional Participant QoS configured to support high
                      throughput data using larger transport sizes than 
                      default. --> 
                    <resource_limits>
                        <type_code_max_serialized_length>
                            8192
                        </type_code_max_serialized_length>
                    </resource_limits>
                    <receiver_pool>
                        <buffer_size>65507</buffer_size>
                    </receiver_pool>
                    <property>
                        <value>

                            <!--
                            Configure UDP transport for higher throughput:
                            -->
                            <element>
                                <name>dds.transport.UDPv4.builtin.parent.message_size_max</name>
                                <value>65507</value>
                            </element>

                            <!--
                            The next setting is to setup the buffers for sending and recieving data 
                            on the transport to be at least double what our expected message size will be.
                            In this case our expected message size is 1MB, so therefore we are setting
                            the buffer sizes to 2MB.
                            -->
                            <element>
                                <name>dds.transport.UDPv4.builtin.send_socket_buffer_size</name>
                                <value>2097152</value>
                            </element>
                            <element>
                                <name>dds.transport.UDPv4.builtin.recv_socket_buffer_size</name>
                                <value>2097152</value>
                            </element>
                            <!-- Configure shared memory transport for higher 
                            throughput: -->
                            <element>
                                <!--  Set the shared memory maximum message size to
                                the same value that was set for UDP.   -->
                                <name>dds.transport.shmem.builtin.parent.message_size_max</name>
                                <value>65507</value>
                                <!-- 64 KB - header sizes -->
                            </element>
                            <element>
                                <!-- Set the size of the shared memory transport's
                                receive buffer to some large value.  -->
                                <name>dds.transport.shmem.builtin.receive_buffer_size</name>
                                <value>2097152</value>
                                <!-- 2 MB -->
                            </element>
                            <element>
                                <!--  Set the maximum number of messages that the 
                                    shared memory transport can cache while 
                                    waiting for them to be read and deserialized.
                                -->
                                <name>dds.transport.shmem.builtin.received_message_count_max</name>
                                <value>2048</value>
                            </element>

                        </value>
                    </property>
                </participant_qos>
            </participant>

            <session name="A_Session">

                <!-- default values for < time_control > *-->

                <replay_topic name="All_Topic">
                    <time_control>
                        <start_mode>LOOP</start_mode>
                    </time_control>
                    <input>
                        <topic_name>*</topic_name>
                        <type_name>*</type_name>
                        <record_group_name>*</record_group_name>
                        <domain_name>*</domain_name>
                    </input>
                </replay_topic>
                
            </session>
            
        </replay_database>

    </replay_service>




</dds>
